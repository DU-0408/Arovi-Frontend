{"ast":null,"code":"var _jsxFileName = \"/Users/devanshupadhyay/PDs/IBM/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport Login from './Login';\nimport Register from './Register';\nimport LanguageSelector from './LanguageSelector';\nimport Settings from './Settings';\nimport { languages, getTranslation } from './languages';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _user$full_name;\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoginLoading, setIsLoginLoading] = useState(false);\n  const [loginError, setLoginError] = useState('');\n  const [showRegister, setShowRegister] = useState(false);\n  const [isRegisterLoading, setIsRegisterLoading] = useState(false);\n  const [registerError, setRegisterError] = useState('');\n  const [currentLanguage, setCurrentLanguage] = useState(languages[0]); // Default to English\n  const [showLanguageSelector, setShowLanguageSelector] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [showPrescriptionForm, setShowPrescriptionForm] = useState(false);\n  const [patientAge, setPatientAge] = useState('');\n  const [patientConditions, setPatientConditions] = useState('');\n  const [isPrescriptionLoading, setIsPrescriptionLoading] = useState(false);\n  const [chatSessions, setChatSessions] = useState([]);\n  const [currentSessionId, setCurrentSessionId] = useState(null);\n  const [user, setUser] = useState(null);\n  const [contextMenu, setContextMenu] = useState(null);\n  const fileInputRef = useRef(null);\n\n  // Configure axios defaults\n  useEffect(() => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setIsAuthenticated(true);\n      fetchUserInfo();\n      fetchChatSessions();\n    }\n  }, []);\n\n  // Initialize language - always default to English for login page\n  useEffect(() => {\n    if (isAuthenticated) {\n      // For authenticated users, load their saved preference\n      const savedLanguage = localStorage.getItem('user_language');\n      if (savedLanguage) {\n        const language = languages.find(lang => lang.code === savedLanguage);\n        if (language) {\n          setCurrentLanguage(language);\n        }\n      } else {\n        // Show language selector for first-time authenticated users\n        setShowLanguageSelector(true);\n      }\n    } else {\n      // For login page, always default to English\n      setCurrentLanguage(languages[0]); // English is the first language\n    }\n  }, [isAuthenticated]);\n  const fetchUserInfo = async () => {\n    try {\n      // For now, we'll get user info from the login response\n      // In a real app, you'd have a /me endpoint\n      const userInfo = localStorage.getItem('user_info');\n      if (userInfo) {\n        setUser(JSON.parse(userInfo));\n      }\n\n      // Fetch user's language preference from backend\n      try {\n        const response = await axios.get('http://localhost:8000/user/language');\n        const {\n          language\n        } = response.data;\n\n        // Update current language based on user preference\n        const userLanguage = languages.find(lang => lang.code === language);\n        if (userLanguage) {\n          setCurrentLanguage(userLanguage);\n          localStorage.setItem('user_language', language);\n        }\n      } catch (error) {\n        console.error('Error fetching user language preference:', error);\n        // Fall back to stored language preference\n        const savedLanguage = localStorage.getItem('user_language');\n        if (savedLanguage) {\n          const language = languages.find(lang => lang.code === savedLanguage);\n          if (language) {\n            setCurrentLanguage(language);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching user info:', error);\n    }\n  };\n  const fetchChatSessions = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/chat/sessions');\n      setChatSessions(response.data);\n    } catch (error) {\n      console.error('Error fetching chat sessions:', error);\n    }\n  };\n  const handleLogin = async (email, password) => {\n    setIsLoginLoading(true);\n    setLoginError('');\n    try {\n      const formData = new FormData();\n      formData.append('email', email);\n      formData.append('password', password);\n      const response = await axios.post('http://localhost:8000/auth/login', formData);\n      const {\n        access_token,\n        user: userInfo\n      } = response.data;\n\n      // Store token and user info\n      localStorage.setItem('access_token', access_token);\n      localStorage.setItem('user_info', JSON.stringify(userInfo));\n\n      // Set axios default header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      setIsAuthenticated(true);\n      setUser(userInfo);\n      setLoginError('');\n\n      // Fetch user's language preference and chat sessions\n      await fetchUserInfo();\n      await fetchChatSessions();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      setLoginError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Login failed. Please try again.');\n    }\n    setIsLoginLoading(false);\n  };\n  const handleRegister = async (email, password, fullName) => {\n    setIsRegisterLoading(true);\n    setRegisterError('');\n    try {\n      const formData = new FormData();\n      formData.append('email', email);\n      formData.append('password', password);\n      formData.append('full_name', fullName);\n      const response = await axios.post('http://localhost:8000/auth/register', formData);\n      const {\n        access_token,\n        user: userInfo\n      } = response.data;\n\n      // Store token and user info\n      localStorage.setItem('access_token', access_token);\n      localStorage.setItem('user_info', JSON.stringify(userInfo));\n\n      // Set axios default header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      setIsAuthenticated(true);\n      setUser(userInfo);\n      setRegisterError('');\n      setShowRegister(false);\n\n      // Fetch user's language preference and chat sessions\n      await fetchUserInfo();\n      await fetchChatSessions();\n\n      // Check if this is a first-time user (after fetching language preference)\n      const savedLanguage = localStorage.getItem('user_language');\n      if (!savedLanguage) {\n        setShowLanguageSelector(true);\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      setRegisterError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Registration failed. Please try again.');\n    }\n    setIsRegisterLoading(false);\n  };\n  const handleLanguageSelect = async language => {\n    setCurrentLanguage(language);\n    localStorage.setItem('user_language', language.code);\n\n    // Save language preference to backend if user is authenticated\n    if (isAuthenticated && user) {\n      try {\n        const formData = new FormData();\n        formData.append('language', language.code);\n        await axios.put('http://localhost:8000/user/language', formData);\n      } catch (error) {\n        console.error('Error saving language preference:', error);\n      }\n    }\n    setShowLanguageSelector(false);\n  };\n  const handleLanguageChange = async language => {\n    setCurrentLanguage(language);\n    localStorage.setItem('user_language', language.code);\n\n    // Save language preference to backend if user is authenticated\n    if (isAuthenticated && user) {\n      try {\n        const formData = new FormData();\n        formData.append('language', language.code);\n        await axios.put('http://localhost:8000/user/language', formData);\n      } catch (error) {\n        console.error('Error saving language preference:', error);\n      }\n    }\n  };\n  const handleLoginPageLanguageChange = language => {\n    // For login page, only update the current language without saving to backend\n    setCurrentLanguage(language);\n    // Don't save to localStorage or backend for login page changes\n  };\n  const handleSettingsClose = () => {\n    setShowSettings(false);\n  };\n  const handleEmailChange = newEmail => {\n    // Update user email (in a real app, this would call an API)\n    if (user) {\n      const updatedUser = {\n        ...user,\n        email: newEmail\n      };\n      setUser(updatedUser);\n      localStorage.setItem('user_info', JSON.stringify(updatedUser));\n    }\n  };\n  const handlePasswordChange = (currentPassword, newPassword) => {\n    // Update password (in a real app, this would call an API)\n    console.log('Password change requested');\n  };\n\n  // Translation helper function\n  const t = key => getTranslation(currentLanguage.code, key);\n  const handleLogout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user_info');\n    delete axios.defaults.headers.common['Authorization'];\n    setIsAuthenticated(false);\n    setUser(null);\n    setMessages([]);\n    setInputText('');\n    setSelectedImage(null);\n    setShowPrescriptionForm(false);\n    setChatSessions([]);\n    setCurrentSessionId(null);\n  };\n  const createNewSession = async () => {\n    try {\n      // Don't create a session immediately - let it be created when first message is sent\n      setCurrentSessionId(null);\n      setMessages([]);\n    } catch (error) {\n      console.error('Error creating new session:', error);\n    }\n  };\n  const deleteSession = async sessionId => {\n    try {\n      await axios.delete(`http://localhost:8000/chat/sessions/${sessionId}`);\n\n      // If the deleted session was the current one, clear it\n      if (sessionId === currentSessionId) {\n        setCurrentSessionId(null);\n        setMessages([]);\n      }\n\n      // Refresh sessions list\n      await fetchChatSessions();\n\n      // Close context menu\n      setContextMenu(null);\n    } catch (error) {\n      console.error('Error deleting session:', error);\n    }\n  };\n  const loadSession = async (sessionId, sessionName) => {\n    try {\n      const response = await axios.get(`http://localhost:8000/chat/sessions/${sessionId}/messages`);\n      const sessionMessages = response.data.map(msg => ({\n        id: msg.id.toString(),\n        text: msg.content,\n        isUser: msg.is_user,\n        timestamp: new Date(msg.created_at),\n        isPrescription: msg.is_prescription\n      }));\n      setMessages(sessionMessages);\n      setCurrentSessionId(sessionId);\n      setMessages(sessionMessages);\n    } catch (error) {\n      console.error('Error loading session:', error);\n    }\n  };\n  const sendMessage = async () => {\n    if (!inputText.trim() && !selectedImage) return;\n    const userMessage = {\n      id: Date.now().toString(),\n      text: inputText,\n      isUser: true,\n      timestamp: new Date(),\n      image: selectedImage ? URL.createObjectURL(selectedImage) : undefined\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setIsLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('message', inputText);\n      formData.append('language', currentLanguage.code);\n      if (selectedImage) {\n        formData.append('image', selectedImage);\n      }\n      if (currentSessionId) {\n        formData.append('session_id', currentSessionId.toString());\n      }\n      const response = await axios.post('http://localhost:8000/chat/', formData);\n      const aiMessage = {\n        id: (Date.now() + 1).toString(),\n        text: response.data.response,\n        isUser: false,\n        timestamp: new Date(),\n        isPrescription: response.data.is_prescription_query\n      };\n      setMessages(prev => [...prev, aiMessage]);\n\n      // Update session info if this is a new session\n      if (response.data.session_id && !currentSessionId) {\n        setCurrentSessionId(response.data.session_id);\n        await fetchChatSessions();\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      const errorMessage = {\n        id: (Date.now() + 1).toString(),\n        text: 'Sorry, there was an error processing your request. Please try again.',\n        isUser: false,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n      setInputText('');\n      setSelectedImage(null);\n    }\n  };\n  const analyzePrescription = async () => {\n    if (!selectedImage) return;\n    setIsPrescriptionLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('image', selectedImage);\n      formData.append('language', currentLanguage.code);\n      if (patientAge) formData.append('patient_age', patientAge);\n      if (patientConditions) formData.append('patient_conditions', patientConditions);\n      if (currentSessionId) {\n        formData.append('session_id', currentSessionId.toString());\n      }\n      const response = await axios.post('http://localhost:8000/prescription-analysis/', formData);\n      const userMessage = {\n        id: Date.now().toString(),\n        text: `Prescription Analysis Request${patientAge ? ` (Age: ${patientAge})` : ''}${patientConditions ? ` (Conditions: ${patientConditions})` : ''}`,\n        isUser: true,\n        timestamp: new Date(),\n        image: URL.createObjectURL(selectedImage),\n        isPrescription: true\n      };\n      const aiMessage = {\n        id: (Date.now() + 1).toString(),\n        text: response.data.response,\n        isUser: false,\n        timestamp: new Date(),\n        isPrescription: true\n      };\n      setMessages(prev => [...prev, userMessage, aiMessage]);\n      setShowPrescriptionForm(false);\n      setSelectedImage(null);\n      setPatientAge('');\n      setPatientConditions('');\n\n      // Update session info if this is a new session\n      if (response.data.session_id && !currentSessionId) {\n        setCurrentSessionId(response.data.session_id);\n        await fetchChatSessions();\n      }\n    } catch (error) {\n      console.error('Error analyzing prescription:', error);\n      const errorMessage = {\n        id: (Date.now() + 1).toString(),\n        text: 'Sorry, there was an error analyzing the prescription. Please try again or consult with a pharmacist.',\n        isUser: false,\n        timestamp: new Date(),\n        isPrescription: true\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsPrescriptionLoading(false);\n    }\n  };\n  const handleImageSelect = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      setSelectedImage(file);\n    }\n  };\n  const removeSelectedImage = () => {\n    setSelectedImage(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      sendMessage();\n    }\n  };\n\n  // Handle clicking outside context menu to close it\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setContextMenu(null);\n    };\n    if (contextMenu) {\n      document.addEventListener('click', handleClickOutside);\n      return () => {\n        document.removeEventListener('click', handleClickOutside);\n      };\n    }\n  }, [contextMenu]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: showRegister ? /*#__PURE__*/_jsxDEV(Register, {\n        onRegister: handleRegister,\n        isLoading: isRegisterLoading,\n        error: registerError,\n        onSwitchToLogin: () => setShowRegister(false),\n        currentLanguage: currentLanguage,\n        t: t,\n        onLanguageChange: handleLoginPageLanguageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin,\n        isLoading: isLoginLoading,\n        error: loginError,\n        onSwitchToRegister: () => setShowRegister(true),\n        currentLanguage: currentLanguage,\n        t: t,\n        onLanguageChange: handleLoginPageLanguageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatgpt-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createNewSession,\n            className: \"new-chat-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this), \" \", t('newChat')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversations-list\",\n          children: chatSessions.map(session => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => loadSession(session.id, session.session_name),\n            onContextMenu: e => {\n              e.preventDefault();\n              setContextMenu({\n                x: e.clientX,\n                y: e.clientY,\n                sessionId: session.id\n              });\n            },\n            className: `conversation-item ${session.id === currentSessionId ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-title\",\n                children: session.session_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-meta\",\n                children: [session.message_count, \" \", t('messages')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 19\n            }, this), session.id === currentSessionId && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"active-indicator\",\n              children: \"\\u25CF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 21\n            }, this)]\n          }, session.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-avatar\",\n              children: (user === null || user === void 0 ? void 0 : (_user$full_name = user.full_name) === null || _user$full_name === void 0 ? void 0 : _user$full_name.charAt(0)) || 'U'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-name\",\n                children: (user === null || user === void 0 ? void 0 : user.full_name) || 'User'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-email\",\n                children: user === null || user === void 0 ? void 0 : user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowLanguageSelector(true),\n              className: \"sidebar-action-btn\",\n              children: [\"\\uD83C\\uDF0D \", currentLanguage.nativeName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowSettings(true),\n              className: \"sidebar-action-btn\",\n              children: [\"\\u2699\\uFE0F \", t('settings')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleLogout,\n              className: \"sidebar-action-btn logout\",\n              children: t('logout')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: t('pediatricAIAssistant')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: t('askMeAboutHealth')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowPrescriptionForm(!showPrescriptionForm),\n              className: `header-action-btn ${showPrescriptionForm ? 'active' : ''}`,\n              children: t('prescriptionAnalysis')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this), showPrescriptionForm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prescription-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: t('prescriptionAnalysis')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prescription-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: t('patientAge')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: patientAge,\n                onChange: e => setPatientAge(e.target.value),\n                placeholder: t('patientAgePlaceholder')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: t('medicalConditions')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: patientConditions,\n                onChange: e => setPatientConditions(e.target.value),\n                placeholder: t('medicalConditionsPlaceholder')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prescription-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              ref: fileInputRef,\n              onChange: handleImageSelect,\n              accept: \"image/*\",\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                var _fileInputRef$current;\n                return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n              },\n              className: \"upload-btn\",\n              children: t('uploadPrescription')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 19\n            }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: analyzePrescription,\n              disabled: isPrescriptionLoading,\n              className: \"analyze-btn\",\n              children: isPrescriptionLoading ? t('analyzing') : t('analyzePrescription')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 17\n          }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: URL.createObjectURL(selectedImage),\n              alt: \"Selected\",\n              className: \"preview-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: removeSelectedImage,\n              className: \"remove-btn\",\n              children: \"\\u2715\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-state-icon\",\n              children: \"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: t('welcome')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: t('emptyStateMessage')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 17\n          }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.isUser ? 'user' : 'ai'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar\",\n              children: message.isUser ? '👤' : '👨‍⚕️'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 696,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [message.isUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-message\",\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ai-message\",\n                children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                  components: {\n                    h1: ({\n                      node,\n                      children,\n                      ...props\n                    }) => /*#__PURE__*/_jsxDEV(\"h1\", {\n                      style: {\n                        fontSize: '1.2em',\n                        margin: '8px 0'\n                      },\n                      ...props,\n                      children: children\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 708,\n                      columnNumber: 67\n                    }, this),\n                    h2: ({\n                      node,\n                      children,\n                      ...props\n                    }) => /*#__PURE__*/_jsxDEV(\"h2\", {\n                      style: {\n                        fontSize: '1.1em',\n                        margin: '8px 0'\n                      },\n                      ...props,\n                      children: children\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 709,\n                      columnNumber: 67\n                    }, this),\n                    h3: ({\n                      node,\n                      children,\n                      ...props\n                    }) => /*#__PURE__*/_jsxDEV(\"h3\", {\n                      style: {\n                        fontSize: '1em',\n                        margin: '6px 0'\n                      },\n                      ...props,\n                      children: children\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 710,\n                      columnNumber: 67\n                    }, this),\n                    p: ({\n                      node,\n                      ...props\n                    }) => /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        margin: '4px 0'\n                      },\n                      ...props\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 711,\n                      columnNumber: 56\n                    }, this),\n                    ul: ({\n                      node,\n                      ...props\n                    }) => /*#__PURE__*/_jsxDEV(\"ul\", {\n                      style: {\n                        margin: '8px 0',\n                        paddingLeft: '20px'\n                      },\n                      ...props\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 712,\n                      columnNumber: 57\n                    }, this),\n                    ol: ({\n                      node,\n                      ...props\n                    }) => /*#__PURE__*/_jsxDEV(\"ol\", {\n                      style: {\n                        margin: '8px 0',\n                        paddingLeft: '20px'\n                      },\n                      ...props\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 713,\n                      columnNumber: 57\n                    }, this),\n                    li: ({\n                      node,\n                      ...props\n                    }) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      style: {\n                        margin: '2px 0'\n                      },\n                      ...props\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 714,\n                      columnNumber: 57\n                    }, this),\n                    strong: ({\n                      node,\n                      ...props\n                    }) => /*#__PURE__*/_jsxDEV(\"strong\", {\n                      style: {\n                        fontWeight: 'bold'\n                      },\n                      ...props\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 715,\n                      columnNumber: 61\n                    }, this),\n                    em: ({\n                      node,\n                      ...props\n                    }) => /*#__PURE__*/_jsxDEV(\"em\", {\n                      style: {\n                        fontStyle: 'italic'\n                      },\n                      ...props\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 716,\n                      columnNumber: 57\n                    }, this),\n                    blockquote: ({\n                      node,\n                      ...props\n                    }) => /*#__PURE__*/_jsxDEV(\"blockquote\", {\n                      style: {\n                        borderLeft: '3px solid #667eea',\n                        paddingLeft: '12px',\n                        margin: '8px 0',\n                        fontStyle: 'italic'\n                      },\n                      ...props\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 718,\n                      columnNumber: 33\n                    }, this),\n                    code: ({\n                      node,\n                      ...props\n                    }) => /*#__PURE__*/_jsxDEV(\"code\", {\n                      style: {\n                        backgroundColor: 'rgba(102, 126, 234, 0.1)',\n                        padding: '2px 4px',\n                        borderRadius: '3px',\n                        fontFamily: 'monospace'\n                      },\n                      ...props\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 726,\n                      columnNumber: 33\n                    }, this)\n                  },\n                  children: message.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 706,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 25\n              }, this), message.image && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: message.image,\n                alt: \"Uploaded\",\n                className: \"message-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 21\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 19\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message ai\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar\",\n              children: \"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ai-message\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"typing-indicator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 756,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 757,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 758,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 755,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 754,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 17\n          }, this), isPrescriptionLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message ai\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar\",\n              children: \"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ai-message\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"typing-indicator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 770,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 771,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 772,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 769,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: inputText,\n              onChange: e => setInputText(e.target.value),\n              onKeyPress: handleKeyPress,\n              placeholder: t('chatPlaceholder'),\n              className: \"text-input\",\n              rows: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                ref: fileInputRef,\n                onChange: handleImageSelect,\n                accept: \"image/*\",\n                style: {\n                  display: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  var _fileInputRef$current2;\n                  return (_fileInputRef$current2 = fileInputRef.current) === null || _fileInputRef$current2 === void 0 ? void 0 : _fileInputRef$current2.click();\n                },\n                className: \"upload-btn\",\n                type: \"button\",\n                children: \"\\uD83D\\uDCF7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 799,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: sendMessage,\n                disabled: isLoading || !inputText.trim() && !selectedImage,\n                className: \"send-btn\",\n                children: t('send')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 15\n          }, this), selectedImage && !showPrescriptionForm && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: URL.createObjectURL(selectedImage),\n              alt: \"Selected\",\n              className: \"preview-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 818,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: removeSelectedImage,\n              className: \"remove-image-btn\",\n              children: \"\\u2715\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 9\n    }, this), contextMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"context-menu\",\n      style: {\n        position: 'fixed',\n        top: contextMenu.y,\n        left: contextMenu.x,\n        zIndex: 1000\n      },\n      onClick: e => e.stopPropagation(),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => contextMenu.sessionId && deleteSession(contextMenu.sessionId),\n        className: \"context-menu-item delete\",\n        children: \"\\uD83D\\uDDD1\\uFE0F Delete Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LanguageSelector, {\n      onLanguageSelect: handleLanguageSelect,\n      isVisible: showLanguageSelector\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Settings, {\n      isVisible: showSettings,\n      onClose: handleSettingsClose,\n      currentLanguage: currentLanguage,\n      onLanguageChange: handleLanguageChange,\n      currentEmail: (user === null || user === void 0 ? void 0 : user.email) || '',\n      onEmailChange: handleEmailChange,\n      onPasswordChange: handlePasswordChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 498,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oTbdJhhetC4jnhtX4lY2SmRwlaU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","ReactMarkdown","Login","Register","LanguageSelector","Settings","languages","getTranslation","jsxDEV","_jsxDEV","App","_s","_user$full_name","isAuthenticated","setIsAuthenticated","isLoginLoading","setIsLoginLoading","loginError","setLoginError","showRegister","setShowRegister","isRegisterLoading","setIsRegisterLoading","registerError","setRegisterError","currentLanguage","setCurrentLanguage","showLanguageSelector","setShowLanguageSelector","showSettings","setShowSettings","messages","setMessages","inputText","setInputText","isLoading","setIsLoading","selectedImage","setSelectedImage","showPrescriptionForm","setShowPrescriptionForm","patientAge","setPatientAge","patientConditions","setPatientConditions","isPrescriptionLoading","setIsPrescriptionLoading","chatSessions","setChatSessions","currentSessionId","setCurrentSessionId","user","setUser","contextMenu","setContextMenu","fileInputRef","token","localStorage","getItem","defaults","headers","common","fetchUserInfo","fetchChatSessions","savedLanguage","language","find","lang","code","userInfo","JSON","parse","response","get","data","userLanguage","setItem","error","console","handleLogin","email","password","formData","FormData","append","post","access_token","stringify","_error$response","_error$response$data","detail","handleRegister","fullName","_error$response2","_error$response2$data","handleLanguageSelect","put","handleLanguageChange","handleLoginPageLanguageChange","handleSettingsClose","handleEmailChange","newEmail","updatedUser","handlePasswordChange","currentPassword","newPassword","log","t","key","handleLogout","removeItem","createNewSession","deleteSession","sessionId","delete","loadSession","sessionName","sessionMessages","map","msg","id","toString","text","content","isUser","is_user","timestamp","Date","created_at","isPrescription","is_prescription","sendMessage","trim","userMessage","now","image","URL","createObjectURL","undefined","prev","aiMessage","is_prescription_query","session_id","errorMessage","analyzePrescription","handleImageSelect","event","_event$target$files","file","target","files","removeSelectedImage","current","value","handleKeyPress","shiftKey","preventDefault","handleClickOutside","document","addEventListener","removeEventListener","className","children","onRegister","onSwitchToLogin","onLanguageChange","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onSwitchToRegister","onClick","session","session_name","onContextMenu","e","x","clientX","y","clientY","message_count","full_name","charAt","nativeName","type","onChange","placeholder","ref","accept","style","display","_fileInputRef$current","click","disabled","src","alt","length","message","components","h1","node","props","fontSize","margin","h2","h3","p","ul","paddingLeft","ol","li","strong","fontWeight","em","fontStyle","blockquote","borderLeft","backgroundColor","padding","borderRadius","fontFamily","onKeyPress","rows","_fileInputRef$current2","position","top","left","zIndex","stopPropagation","onLanguageSelect","isVisible","onClose","currentEmail","onEmailChange","onPasswordChange","_c","$RefreshReg$"],"sources":["/Users/devanshupadhyay/PDs/IBM/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport Login from './Login';\nimport Register from './Register';\nimport LanguageSelector from './LanguageSelector';\nimport Settings from './Settings';\nimport { languages, Language, getTranslation } from './languages';\nimport './App.css';\n\ninterface Message {\n  id: string;\n  text: string;\n  isUser: boolean;\n  timestamp: Date;\n  image?: string;\n  isPrescription?: boolean;\n}\n\ninterface ChatSession {\n  id: number;\n  session_name: string;\n  created_at: string;\n  updated_at: string;\n  message_count: number;\n}\n\ninterface User {\n  id: number;\n  email: string;\n  full_name: string;\n}\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoginLoading, setIsLoginLoading] = useState(false);\n  const [loginError, setLoginError] = useState('');\n  const [showRegister, setShowRegister] = useState(false);\n  const [isRegisterLoading, setIsRegisterLoading] = useState(false);\n  const [registerError, setRegisterError] = useState('');\n  const [currentLanguage, setCurrentLanguage] = useState<Language>(languages[0]); // Default to English\n  const [showLanguageSelector, setShowLanguageSelector] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [inputText, setInputText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedImage, setSelectedImage] = useState<File | null>(null);\n  const [showPrescriptionForm, setShowPrescriptionForm] = useState(false);\n  const [patientAge, setPatientAge] = useState('');\n  const [patientConditions, setPatientConditions] = useState('');\n  const [isPrescriptionLoading, setIsPrescriptionLoading] = useState(false);\n  const [chatSessions, setChatSessions] = useState<ChatSession[]>([]);\n  const [currentSessionId, setCurrentSessionId] = useState<number | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [contextMenu, setContextMenu] = useState<{ x: number; y: number; sessionId: number | null } | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Configure axios defaults\n  useEffect(() => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setIsAuthenticated(true);\n      fetchUserInfo();\n      fetchChatSessions();\n    }\n  }, []);\n\n  // Initialize language - always default to English for login page\n  useEffect(() => {\n    if (isAuthenticated) {\n      // For authenticated users, load their saved preference\n      const savedLanguage = localStorage.getItem('user_language');\n      if (savedLanguage) {\n        const language = languages.find(lang => lang.code === savedLanguage);\n        if (language) {\n          setCurrentLanguage(language);\n        }\n      } else {\n        // Show language selector for first-time authenticated users\n        setShowLanguageSelector(true);\n      }\n    } else {\n      // For login page, always default to English\n      setCurrentLanguage(languages[0]); // English is the first language\n    }\n  }, [isAuthenticated]);\n\n  const fetchUserInfo = async () => {\n    try {\n      // For now, we'll get user info from the login response\n      // In a real app, you'd have a /me endpoint\n      const userInfo = localStorage.getItem('user_info');\n      if (userInfo) {\n        setUser(JSON.parse(userInfo));\n      }\n      \n      // Fetch user's language preference from backend\n      try {\n        const response = await axios.get('http://localhost:8000/user/language');\n        const { language } = response.data;\n        \n        // Update current language based on user preference\n        const userLanguage = languages.find(lang => lang.code === language);\n        if (userLanguage) {\n          setCurrentLanguage(userLanguage);\n          localStorage.setItem('user_language', language);\n        }\n      } catch (error) {\n        console.error('Error fetching user language preference:', error);\n        // Fall back to stored language preference\n        const savedLanguage = localStorage.getItem('user_language');\n        if (savedLanguage) {\n          const language = languages.find(lang => lang.code === savedLanguage);\n          if (language) {\n            setCurrentLanguage(language);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching user info:', error);\n    }\n  };\n\n  const fetchChatSessions = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/chat/sessions');\n      setChatSessions(response.data);\n    } catch (error) {\n      console.error('Error fetching chat sessions:', error);\n    }\n  };\n\n  const handleLogin = async (email: string, password: string) => {\n    setIsLoginLoading(true);\n    setLoginError('');\n    \n    try {\n      const formData = new FormData();\n      formData.append('email', email);\n      formData.append('password', password);\n\n      const response = await axios.post('http://localhost:8000/auth/login', formData);\n      \n      const { access_token, user: userInfo } = response.data;\n      \n      // Store token and user info\n      localStorage.setItem('access_token', access_token);\n      localStorage.setItem('user_info', JSON.stringify(userInfo));\n      \n      // Set axios default header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      \n      setIsAuthenticated(true);\n      setUser(userInfo);\n      setLoginError('');\n      \n      // Fetch user's language preference and chat sessions\n      await fetchUserInfo();\n      await fetchChatSessions();\n      \n    } catch (error: any) {\n      console.error('Login error:', error);\n      setLoginError(error.response?.data?.detail || 'Login failed. Please try again.');\n    }\n    \n    setIsLoginLoading(false);\n  };\n\n  const handleRegister = async (email: string, password: string, fullName: string) => {\n    setIsRegisterLoading(true);\n    setRegisterError('');\n    \n    try {\n      const formData = new FormData();\n      formData.append('email', email);\n      formData.append('password', password);\n      formData.append('full_name', fullName);\n\n      const response = await axios.post('http://localhost:8000/auth/register', formData);\n      \n      const { access_token, user: userInfo } = response.data;\n      \n      // Store token and user info\n      localStorage.setItem('access_token', access_token);\n      localStorage.setItem('user_info', JSON.stringify(userInfo));\n      \n      // Set axios default header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      \n      setIsAuthenticated(true);\n      setUser(userInfo);\n      setRegisterError('');\n      setShowRegister(false);\n      \n      // Fetch user's language preference and chat sessions\n      await fetchUserInfo();\n      await fetchChatSessions();\n      \n      // Check if this is a first-time user (after fetching language preference)\n      const savedLanguage = localStorage.getItem('user_language');\n      if (!savedLanguage) {\n        setShowLanguageSelector(true);\n      }\n      \n    } catch (error: any) {\n      console.error('Registration error:', error);\n      setRegisterError(error.response?.data?.detail || 'Registration failed. Please try again.');\n    }\n    \n    setIsRegisterLoading(false);\n  };\n\n  const handleLanguageSelect = async (language: Language) => {\n    setCurrentLanguage(language);\n    localStorage.setItem('user_language', language.code);\n    \n    // Save language preference to backend if user is authenticated\n    if (isAuthenticated && user) {\n      try {\n        const formData = new FormData();\n        formData.append('language', language.code);\n        await axios.put('http://localhost:8000/user/language', formData);\n      } catch (error) {\n        console.error('Error saving language preference:', error);\n      }\n    }\n    \n    setShowLanguageSelector(false);\n  };\n\n  const handleLanguageChange = async (language: Language) => {\n    setCurrentLanguage(language);\n    localStorage.setItem('user_language', language.code);\n    \n    // Save language preference to backend if user is authenticated\n    if (isAuthenticated && user) {\n      try {\n        const formData = new FormData();\n        formData.append('language', language.code);\n        await axios.put('http://localhost:8000/user/language', formData);\n      } catch (error) {\n        console.error('Error saving language preference:', error);\n      }\n    }\n  };\n\n  const handleLoginPageLanguageChange = (language: Language) => {\n    // For login page, only update the current language without saving to backend\n    setCurrentLanguage(language);\n    // Don't save to localStorage or backend for login page changes\n  };\n\n  const handleSettingsClose = () => {\n    setShowSettings(false);\n  };\n\n  const handleEmailChange = (newEmail: string) => {\n    // Update user email (in a real app, this would call an API)\n    if (user) {\n      const updatedUser = { ...user, email: newEmail };\n      setUser(updatedUser);\n      localStorage.setItem('user_info', JSON.stringify(updatedUser));\n    }\n  };\n\n  const handlePasswordChange = (currentPassword: string, newPassword: string) => {\n    // Update password (in a real app, this would call an API)\n    console.log('Password change requested');\n  };\n\n  // Translation helper function\n  const t = (key: string) => getTranslation(currentLanguage.code, key);\n\n  const handleLogout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user_info');\n    delete axios.defaults.headers.common['Authorization'];\n    \n    setIsAuthenticated(false);\n    setUser(null);\n    setMessages([]);\n    setInputText('');\n    setSelectedImage(null);\n    setShowPrescriptionForm(false);\n    setChatSessions([]);\n    setCurrentSessionId(null);\n  };\n\n  const createNewSession = async () => {\n    try {\n      // Don't create a session immediately - let it be created when first message is sent\n      setCurrentSessionId(null);\n      setMessages([]);\n      \n    } catch (error) {\n      console.error('Error creating new session:', error);\n    }\n  };\n\n  const deleteSession = async (sessionId: number) => {\n    try {\n      await axios.delete(`http://localhost:8000/chat/sessions/${sessionId}`);\n      \n      // If the deleted session was the current one, clear it\n      if (sessionId === currentSessionId) {\n        setCurrentSessionId(null);\n        setMessages([]);\n      }\n      \n      // Refresh sessions list\n      await fetchChatSessions();\n      \n      // Close context menu\n      setContextMenu(null);\n      \n    } catch (error) {\n      console.error('Error deleting session:', error);\n    }\n  };\n\n  const loadSession = async (sessionId: number, sessionName: string) => {\n    try {\n      const response = await axios.get(`http://localhost:8000/chat/sessions/${sessionId}/messages`);\n      const sessionMessages = response.data.map((msg: any) => ({\n        id: msg.id.toString(),\n        text: msg.content,\n        isUser: msg.is_user,\n        timestamp: new Date(msg.created_at),\n        isPrescription: msg.is_prescription\n      }));\n      \n      setMessages(sessionMessages);\n      setCurrentSessionId(sessionId);\n      setMessages(sessionMessages);\n      \n    } catch (error) {\n      console.error('Error loading session:', error);\n    }\n  };\n\n  const sendMessage = async () => {\n    if (!inputText.trim() && !selectedImage) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      text: inputText,\n      isUser: true,\n      timestamp: new Date(),\n      image: selectedImage ? URL.createObjectURL(selectedImage) : undefined\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setIsLoading(true);\n\n    try {\n      const formData = new FormData();\n      formData.append('message', inputText);\n      formData.append('language', currentLanguage.code);\n      if (selectedImage) {\n        formData.append('image', selectedImage);\n      }\n      if (currentSessionId) {\n        formData.append('session_id', currentSessionId.toString());\n      }\n\n      const response = await axios.post('http://localhost:8000/chat/', formData);\n\n      const aiMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        text: response.data.response,\n        isUser: false,\n        timestamp: new Date(),\n        isPrescription: response.data.is_prescription_query\n      };\n\n      setMessages(prev => [...prev, aiMessage]);\n      \n      // Update session info if this is a new session\n      if (response.data.session_id && !currentSessionId) {\n        setCurrentSessionId(response.data.session_id);\n        await fetchChatSessions();\n      }\n      \n    } catch (error) {\n      console.error('Error sending message:', error);\n      const errorMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        text: 'Sorry, there was an error processing your request. Please try again.',\n        isUser: false,\n        timestamp: new Date(),\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n      setInputText('');\n      setSelectedImage(null);\n    }\n  };\n\n  const analyzePrescription = async () => {\n    if (!selectedImage) return;\n\n    setIsPrescriptionLoading(true);\n\n    try {\n      const formData = new FormData();\n      formData.append('image', selectedImage);\n      formData.append('language', currentLanguage.code);\n      if (patientAge) formData.append('patient_age', patientAge);\n      if (patientConditions) formData.append('patient_conditions', patientConditions);\n      if (currentSessionId) {\n        formData.append('session_id', currentSessionId.toString());\n      }\n\n      const response = await axios.post('http://localhost:8000/prescription-analysis/', formData);\n\n      const userMessage: Message = {\n        id: Date.now().toString(),\n        text: `Prescription Analysis Request${patientAge ? ` (Age: ${patientAge})` : ''}${patientConditions ? ` (Conditions: ${patientConditions})` : ''}`,\n        isUser: true,\n        timestamp: new Date(),\n        image: URL.createObjectURL(selectedImage),\n        isPrescription: true\n      };\n\n      const aiMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        text: response.data.response,\n        isUser: false,\n        timestamp: new Date(),\n        isPrescription: true\n      };\n\n      setMessages(prev => [...prev, userMessage, aiMessage]);\n      setShowPrescriptionForm(false);\n      setSelectedImage(null);\n      setPatientAge('');\n      setPatientConditions('');\n      \n      // Update session info if this is a new session\n      if (response.data.session_id && !currentSessionId) {\n        setCurrentSessionId(response.data.session_id);\n        await fetchChatSessions();\n      }\n      \n    } catch (error) {\n      console.error('Error analyzing prescription:', error);\n      const errorMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        text: 'Sorry, there was an error analyzing the prescription. Please try again or consult with a pharmacist.',\n        isUser: false,\n        timestamp: new Date(),\n        isPrescription: true\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsPrescriptionLoading(false);\n    }\n  };\n\n  const handleImageSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      setSelectedImage(file);\n    }\n  };\n\n  const removeSelectedImage = () => {\n    setSelectedImage(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      sendMessage();\n    }\n  };\n\n  // Handle clicking outside context menu to close it\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setContextMenu(null);\n    };\n\n    if (contextMenu) {\n      document.addEventListener('click', handleClickOutside);\n      return () => {\n        document.removeEventListener('click', handleClickOutside);\n      };\n    }\n  }, [contextMenu]);\n\n  return (\n    <div className=\"App\">\n      {!isAuthenticated ? (\n        <div className=\"login-container\">\n          {showRegister ? (\n            <Register \n              onRegister={handleRegister}\n              isLoading={isRegisterLoading}\n              error={registerError}\n              onSwitchToLogin={() => setShowRegister(false)}\n              currentLanguage={currentLanguage}\n              t={t}\n              onLanguageChange={handleLoginPageLanguageChange}\n            />\n          ) : (\n            <Login \n              onLogin={handleLogin}\n              isLoading={isLoginLoading}\n              error={loginError}\n              onSwitchToRegister={() => setShowRegister(true)}\n              currentLanguage={currentLanguage}\n              t={t}\n              onLanguageChange={handleLoginPageLanguageChange}\n            />\n          )}\n        </div>\n      ) : (\n        <div className=\"chatgpt-layout\">\n          {/* Sidebar */}\n          <div className=\"sidebar\">\n            <div className=\"sidebar-header\">\n              <button \n                onClick={createNewSession}\n                className=\"new-chat-btn\"\n              >\n                <span>+</span> {t('newChat')}\n              </button>\n            </div>\n            \n            <div className=\"conversations-list\">\n              {chatSessions.map((session) => (\n                <div \n                  key={session.id}\n                  onClick={() => loadSession(session.id, session.session_name)}\n                  onContextMenu={(e) => {\n                    e.preventDefault();\n                    setContextMenu({\n                      x: e.clientX,\n                      y: e.clientY,\n                      sessionId: session.id\n                    });\n                  }}\n                  className={`conversation-item ${session.id === currentSessionId ? 'active' : ''}`}\n                >\n                  <div className=\"conversation-content\">\n                    <div className=\"conversation-title\">\n                      {session.session_name}\n                    </div>\n                    <div className=\"conversation-meta\">\n                      {session.message_count} {t('messages')}\n                    </div>\n                  </div>\n                  {session.id === currentSessionId && (\n                    <div className=\"active-indicator\">●</div>\n                  )}\n                </div>\n              ))}\n            </div>\n            \n            <div className=\"sidebar-footer\">\n              <div className=\"user-info\">\n                <div className=\"user-avatar\">\n                  {user?.full_name?.charAt(0) || 'U'}\n                </div>\n                <div className=\"user-details\">\n                  <div className=\"user-name\">{user?.full_name || 'User'}</div>\n                  <div className=\"user-email\">{user?.email}</div>\n                </div>\n              </div>\n              \n              <div className=\"sidebar-actions\">\n                <button \n                  onClick={() => setShowLanguageSelector(true)}\n                  className=\"sidebar-action-btn\"\n                >\n                  🌍 {currentLanguage.nativeName}\n                </button>\n                <button \n                  onClick={() => setShowSettings(true)}\n                  className=\"sidebar-action-btn\"\n                >\n                  ⚙️ {t('settings')}\n                </button>\n                <button \n                  onClick={handleLogout}\n                  className=\"sidebar-action-btn logout\"\n                >\n                  {t('logout')}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Main Chat Area */}\n          <div className=\"main-chat\">\n            {/* Chat Header */}\n            <div className=\"chat-header\">\n              <div className=\"chat-header-content\">\n                <h1>{t('pediatricAIAssistant')}</h1>\n                <p>{t('askMeAboutHealth')}</p>\n              </div>\n              \n              <div className=\"chat-header-actions\">\n                <button \n                  onClick={() => setShowPrescriptionForm(!showPrescriptionForm)}\n                  className={`header-action-btn ${showPrescriptionForm ? 'active' : ''}`}\n                >\n                  {t('prescriptionAnalysis')}\n                </button>\n              </div>\n            </div>\n\n            {/* Prescription Form */}\n            {showPrescriptionForm && (\n              <div className=\"prescription-form\">\n                <h3>{t('prescriptionAnalysis')}</h3>\n                <div className=\"prescription-inputs\">\n                  <div className=\"input-group\">\n                    <label>{t('patientAge')}</label>\n                    <input\n                      type=\"text\"\n                      value={patientAge}\n                      onChange={(e) => setPatientAge(e.target.value)}\n                      placeholder={t('patientAgePlaceholder')}\n                    />\n                  </div>\n                  <div className=\"input-group\">\n                    <label>{t('medicalConditions')}</label>\n                    <input\n                      type=\"text\"\n                      value={patientConditions}\n                      onChange={(e) => setPatientConditions(e.target.value)}\n                      placeholder={t('medicalConditionsPlaceholder')}\n                    />\n                  </div>\n                </div>\n                <div className=\"prescription-actions\">\n                  <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    onChange={handleImageSelect}\n                    accept=\"image/*\"\n                    style={{ display: 'none' }}\n                  />\n                  <button \n                    onClick={() => fileInputRef.current?.click()}\n                    className=\"upload-btn\"\n                  >\n                    {t('uploadPrescription')}\n                  </button>\n                  {selectedImage && (\n                    <button \n                      onClick={analyzePrescription}\n                      disabled={isPrescriptionLoading}\n                      className=\"analyze-btn\"\n                    >\n                      {isPrescriptionLoading ? t('analyzing') : t('analyzePrescription')}\n                    </button>\n                  )}\n                </div>\n                {selectedImage && (\n                  <div className=\"selected-image\">\n                    <img \n                      src={URL.createObjectURL(selectedImage)} \n                      alt=\"Selected\" \n                      className=\"preview-image\"\n                    />\n                    <button \n                      onClick={removeSelectedImage}\n                      className=\"remove-btn\"\n                    >\n                      ✕\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Messages */}\n            <div className=\"messages-container\">\n              {messages.length === 0 ? (\n                <div className=\"empty-state\">\n                  <div className=\"empty-state-icon\">👨‍⚕️</div>\n                  <h2>{t('welcome')}</h2>\n                  <p>{t('emptyStateMessage')}</p>\n                </div>\n              ) : (\n                messages.map((message) => (\n                  <div key={message.id} className={`message ${message.isUser ? 'user' : 'ai'}`}>\n                    <div className=\"message-avatar\">\n                      {message.isUser ? '👤' : '👨‍⚕️'}\n                    </div>\n                    <div className=\"message-content\">\n                      {message.isUser ? (\n                        <div className=\"user-message\">\n                          {message.text}\n                        </div>\n                      ) : (\n                        <div className=\"ai-message\">\n                          <ReactMarkdown \n                            components={{\n                              h1: ({node, children, ...props}) => <h1 style={{fontSize: '1.2em', margin: '8px 0'}} {...props}>{children}</h1>,\n                              h2: ({node, children, ...props}) => <h2 style={{fontSize: '1.1em', margin: '8px 0'}} {...props}>{children}</h2>,\n                              h3: ({node, children, ...props}) => <h3 style={{fontSize: '1em', margin: '6px 0'}} {...props}>{children}</h3>,\n                              p: ({node, ...props}) => <p style={{margin: '4px 0'}} {...props} />,\n                              ul: ({node, ...props}) => <ul style={{margin: '8px 0', paddingLeft: '20px'}} {...props} />,\n                              ol: ({node, ...props}) => <ol style={{margin: '8px 0', paddingLeft: '20px'}} {...props} />,\n                              li: ({node, ...props}) => <li style={{margin: '2px 0'}} {...props} />,\n                              strong: ({node, ...props}) => <strong style={{fontWeight: 'bold'}} {...props} />,\n                              em: ({node, ...props}) => <em style={{fontStyle: 'italic'}} {...props} />,\n                              blockquote: ({node, ...props}) => (\n                                <blockquote style={{\n                                  borderLeft: '3px solid #667eea',\n                                  paddingLeft: '12px',\n                                  margin: '8px 0',\n                                  fontStyle: 'italic'\n                                }} {...props} />\n                              ),\n                              code: ({node, ...props}) => (\n                                <code style={{\n                                  backgroundColor: 'rgba(102, 126, 234, 0.1)',\n                                  padding: '2px 4px',\n                                  borderRadius: '3px',\n                                  fontFamily: 'monospace'\n                                }} {...props} />\n                              )\n                            }}\n                          >\n                            {message.text}\n                          </ReactMarkdown>\n                        </div>\n                      )}\n                      {message.image && (\n                        <img \n                          src={message.image} \n                          alt=\"Uploaded\" \n                          className=\"message-image\"\n                        />\n                      )}\n                    </div>\n                  </div>\n                ))\n              )}\n              {isLoading && (\n                <div className=\"message ai\">\n                  <div className=\"message-avatar\">👨‍⚕️</div>\n                  <div className=\"message-content\">\n                    <div className=\"ai-message\">\n                      <div className=\"typing-indicator\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              {isPrescriptionLoading && (\n                <div className=\"message ai\">\n                  <div className=\"message-avatar\">👨‍⚕️</div>\n                  <div className=\"message-content\">\n                    <div className=\"ai-message\">\n                      <div className=\"typing-indicator\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Input Area */}\n            <div className=\"input-container\">\n              <div className=\"input-wrapper\">\n                <textarea\n                  value={inputText}\n                  onChange={(e) => setInputText(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  placeholder={t('chatPlaceholder')}\n                  className=\"text-input\"\n                  rows={1}\n                />\n                <div className=\"input-actions\">\n                  <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    onChange={handleImageSelect}\n                    accept=\"image/*\"\n                    style={{ display: 'none' }}\n                  />\n                  <button \n                    onClick={() => fileInputRef.current?.click()}\n                    className=\"upload-btn\"\n                    type=\"button\"\n                  >\n                    📷\n                  </button>\n                  <button \n                    onClick={sendMessage}\n                    disabled={isLoading || (!inputText.trim() && !selectedImage)}\n                    className=\"send-btn\"\n                  >\n                    {t('send')}\n                  </button>\n                </div>\n              </div>\n              \n              {selectedImage && !showPrescriptionForm && (\n                <div className=\"selected-image\">\n                  <img \n                    src={URL.createObjectURL(selectedImage)} \n                    alt=\"Selected\" \n                    className=\"preview-image\"\n                  />\n                  <button onClick={removeSelectedImage} className=\"remove-image-btn\">\n                    ✕\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Context Menu */}\n      {contextMenu && (\n        <div \n          className=\"context-menu\"\n          style={{\n            position: 'fixed',\n            top: contextMenu.y,\n            left: contextMenu.x,\n            zIndex: 1000\n          }}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <button \n            onClick={() => contextMenu.sessionId && deleteSession(contextMenu.sessionId)}\n            className=\"context-menu-item delete\"\n          >\n            🗑️ Delete Chat\n          </button>\n        </div>\n      )}\n      \n      {/* Language Selector Modal */}\n      <LanguageSelector\n        onLanguageSelect={handleLanguageSelect}\n        isVisible={showLanguageSelector}\n      />\n      \n      {/* Settings Modal */}\n      <Settings\n        isVisible={showSettings}\n        onClose={handleSettingsClose}\n        currentLanguage={currentLanguage}\n        onLanguageChange={handleLanguageChange}\n        currentEmail={user?.email || ''}\n        onEmailChange={handleEmailChange}\n        onPasswordChange={handlePasswordChange}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}