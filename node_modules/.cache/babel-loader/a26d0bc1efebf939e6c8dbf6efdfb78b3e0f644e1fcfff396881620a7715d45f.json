{"ast":null,"code":"var _jsxFileName = \"/Users/devanshupadhyay/PDs/IBM/frontend/src/LanguageSelector.tsx\";\nimport React from 'react';\nimport { languages } from './languages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageSelector = ({\n  onLanguageSelect,\n  isVisible\n}) => {\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-selector-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-selector-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-selector-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDF0D Select Your Language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose your preferred language for the app\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-grid\",\n        children: languages.map(language => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"language-option\",\n          onClick: () => onLanguageSelect(language),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"language-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"language-name\",\n              children: language.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"language-native\",\n              children: language.nativeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"language-arrow\",\n            children: \"\\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, language.code, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = LanguageSelector;\nexport default LanguageSelector;\nvar _c;\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"names":["React","languages","jsxDEV","_jsxDEV","LanguageSelector","onLanguageSelect","isVisible","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","language","onClick","name","nativeName","code","_c","$RefreshReg$"],"sources":["/Users/devanshupadhyay/PDs/IBM/frontend/src/LanguageSelector.tsx"],"sourcesContent":["import React from 'react';\nimport { languages, Language } from './languages';\n\ninterface LanguageSelectorProps {\n  onLanguageSelect: (language: Language) => void;\n  isVisible: boolean;\n}\n\nconst LanguageSelector: React.FC<LanguageSelectorProps> = ({ onLanguageSelect, isVisible }) => {\n  if (!isVisible) return null;\n\n  return (\n    <div className=\"language-selector-overlay\">\n      <div className=\"language-selector-modal\">\n        <div className=\"language-selector-header\">\n          <h2>üåç Select Your Language</h2>\n          <p>Choose your preferred language for the app</p>\n        </div>\n        \n        <div className=\"language-grid\">\n          {languages.map((language) => (\n            <button\n              key={language.code}\n              className=\"language-option\"\n              onClick={() => onLanguageSelect(language)}\n            >\n              <div className=\"language-info\">\n                <div className=\"language-name\">{language.name}</div>\n                <div className=\"language-native\">{language.nativeName}</div>\n              </div>\n              <div className=\"language-arrow\">‚Üí</div>\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LanguageSelector; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAkB,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOlD,MAAMC,gBAAiD,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC;AAAU,CAAC,KAAK;EAC7F,IAAI,CAACA,SAAS,EAAE,OAAO,IAAI;EAE3B,oBACEH,OAAA;IAAKI,SAAS,EAAC,2BAA2B;IAAAC,QAAA,eACxCL,OAAA;MAAKI,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACtCL,OAAA;QAAKI,SAAS,EAAC,0BAA0B;QAAAC,QAAA,gBACvCL,OAAA;UAAAK,QAAA,EAAI;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChCT,OAAA;UAAAK,QAAA,EAAG;QAA0C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eAENT,OAAA;QAAKI,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BP,SAAS,CAACY,GAAG,CAAEC,QAAQ,iBACtBX,OAAA;UAEEI,SAAS,EAAC,iBAAiB;UAC3BQ,OAAO,EAAEA,CAAA,KAAMV,gBAAgB,CAACS,QAAQ,CAAE;UAAAN,QAAA,gBAE1CL,OAAA;YAAKI,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5BL,OAAA;cAAKI,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAEM,QAAQ,CAACE;YAAI;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACpDT,OAAA;cAAKI,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAEM,QAAQ,CAACG;YAAU;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzD,CAAC,eACNT,OAAA;YAAKI,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GARlCE,QAAQ,CAACI,IAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASZ,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACO,EAAA,GA7BIf,gBAAiD;AA+BvD,eAAeA,gBAAgB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}