{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import axios from'axios';import ReactMarkdown from'react-markdown';import Login from'./Login';import Register from'./Register';import LanguageSelector from'./LanguageSelector';import Settings from'./Settings';import{languages,getTranslation}from'./languages';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _user$full_name;const[isAuthenticated,setIsAuthenticated]=useState(false);const[isLoginLoading,setIsLoginLoading]=useState(false);const[loginError,setLoginError]=useState('');const[showRegister,setShowRegister]=useState(false);const[isRegisterLoading,setIsRegisterLoading]=useState(false);const[registerError,setRegisterError]=useState('');const[currentLanguage,setCurrentLanguage]=useState(languages[0]);// Default to English\nconst[showLanguageSelector,setShowLanguageSelector]=useState(false);const[showSettings,setShowSettings]=useState(false);const[messages,setMessages]=useState([]);const[inputText,setInputText]=useState('');const[isLoading,setIsLoading]=useState(false);const[selectedImage,setSelectedImage]=useState(null);const[showPrescriptionForm,setShowPrescriptionForm]=useState(false);const[patientAge,setPatientAge]=useState('');const[patientConditions,setPatientConditions]=useState('');const[isPrescriptionLoading,setIsPrescriptionLoading]=useState(false);const[chatSessions,setChatSessions]=useState([]);const[currentSessionId,setCurrentSessionId]=useState(null);const[user,setUser]=useState(null);const[contextMenu,setContextMenu]=useState(null);const[isDarkMode,setIsDarkMode]=useState(false);const fileInputRef=useRef(null);// Configure axios defaults and interceptors\nuseEffect(()=>{const token=localStorage.getItem('access_token');if(token){axios.defaults.headers.common['Authorization']=`Bearer ${token}`;setIsAuthenticated(true);fetchUserInfo();fetchChatSessions();}// Add response interceptor to handle 401 errors\nconst interceptor=axios.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Clear token and redirect to login\nlocalStorage.removeItem('access_token');localStorage.removeItem('user_info');delete axios.defaults.headers.common['Authorization'];setIsAuthenticated(false);setUser(null);setMessages([]);setChatSessions([]);setCurrentSessionId(null);}return Promise.reject(error);});// Cleanup interceptor on unmount\nreturn()=>{axios.interceptors.response.eject(interceptor);};},[]);// Initialize language - always default to English for login page\nuseEffect(()=>{if(isAuthenticated){// For authenticated users, we'll load their preference in fetchUserInfo\n// This prevents race conditions between localStorage and backend data\n}else{// For login page, always default to English\nsetCurrentLanguage(languages[0]);// English is the first language\n}},[isAuthenticated]);// Initialize dark mode\nuseEffect(()=>{const savedDarkMode=localStorage.getItem('dark_mode');if(savedDarkMode){setIsDarkMode(savedDarkMode==='true');}},[]);const fetchUserInfo=async()=>{try{// For now, we'll get user info from the login response\n// In a real app, you'd have a /me endpoint\nconst userInfo=localStorage.getItem('user_info');if(userInfo){setUser(JSON.parse(userInfo));}// Fetch user's language preference from backend\ntry{const response=await axios.get('http://localhost:8000/user/language');const{language}=response.data;// Update current language based on user preference\nconst userLanguage=languages.find(lang=>lang.code===language);if(userLanguage){setCurrentLanguage(userLanguage);localStorage.setItem('user_language',language);}else{// If no language preference is set, show language selector\nsetShowLanguageSelector(true);}}catch(error){var _error$response2;console.error('Error fetching user language preference:',error);// If it's an authentication error, clear the token and redirect to login\nif(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===401){handleLogout();return;}// Fall back to stored language preference\nconst savedLanguage=localStorage.getItem('user_language');if(savedLanguage){const language=languages.find(lang=>lang.code===savedLanguage);if(language){setCurrentLanguage(language);}else{// If no valid language preference found, show language selector\nsetShowLanguageSelector(true);}}else{// If no language preference at all, show language selector\nsetShowLanguageSelector(true);}}}catch(error){console.error('Error fetching user info:',error);}};const fetchChatSessions=async()=>{try{const response=await axios.get('http://localhost:8000/chat/sessions');setChatSessions(response.data);}catch(error){var _error$response3;console.error('Error fetching chat sessions:',error);// If it's an authentication error, clear the token and redirect to login\nif(((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)===401){handleLogout();return;}}};const handleLogin=async(email,password)=>{setIsLoginLoading(true);setLoginError('');try{const formData=new FormData();formData.append('email',email);formData.append('password',password);const response=await axios.post('http://localhost:8000/auth/login',formData);const{access_token,user:userInfo}=response.data;// Store token and user info\nlocalStorage.setItem('access_token',access_token);localStorage.setItem('user_info',JSON.stringify(userInfo));// Set axios default header\naxios.defaults.headers.common['Authorization']=`Bearer ${access_token}`;setIsAuthenticated(true);setUser(userInfo);setLoginError('');// Fetch user's language preference and chat sessions\nawait fetchUserInfo();await fetchChatSessions();}catch(error){var _error$response4,_error$response4$data;console.error('Login error:',error);setLoginError(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.detail)||'Login failed. Please try again.');}setIsLoginLoading(false);};const handleRegister=async(email,password,fullName)=>{setIsRegisterLoading(true);setRegisterError('');try{const formData=new FormData();formData.append('email',email);formData.append('password',password);formData.append('full_name',fullName);const response=await axios.post('http://localhost:8000/auth/register',formData);const{access_token,user:userInfo}=response.data;// Store token and user info\nlocalStorage.setItem('access_token',access_token);localStorage.setItem('user_info',JSON.stringify(userInfo));// Set axios default header\naxios.defaults.headers.common['Authorization']=`Bearer ${access_token}`;setIsAuthenticated(true);setUser(userInfo);setRegisterError('');setShowRegister(false);// Fetch user's language preference and chat sessions\nawait fetchUserInfo();await fetchChatSessions();// Check if this is a first-time user (after fetching language preference)\nconst savedLanguage=localStorage.getItem('user_language');if(!savedLanguage){setShowLanguageSelector(true);}}catch(error){var _error$response5,_error$response5$data;console.error('Registration error:',error);setRegisterError(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.detail)||'Registration failed. Please try again.');}setIsRegisterLoading(false);};const handleLanguageSelect=async language=>{setCurrentLanguage(language);localStorage.setItem('user_language',language.code);// Save language preference to backend if user is authenticated\nif(isAuthenticated&&user){try{const formData=new FormData();formData.append('language',language.code);await axios.put('http://localhost:8000/user/language',formData);// Refresh user info to ensure language preference is updated\nawait fetchUserInfo();}catch(error){console.error('Error saving language preference:',error);}}setShowLanguageSelector(false);};const handleLanguageChange=async language=>{setCurrentLanguage(language);localStorage.setItem('user_language',language.code);// Save language preference to backend if user is authenticated\nif(isAuthenticated&&user){try{const formData=new FormData();formData.append('language',language.code);await axios.put('http://localhost:8000/user/language',formData);// Refresh user info to ensure language preference is updated\nawait fetchUserInfo();}catch(error){console.error('Error saving language preference:',error);}}};const handleLoginPageLanguageChange=language=>{// For login page, only update the current language without saving to backend\nsetCurrentLanguage(language);// Don't save to localStorage or backend for login page changes\n};const handleDarkModeToggle=()=>{const newDarkMode=!isDarkMode;setIsDarkMode(newDarkMode);localStorage.setItem('dark_mode',newDarkMode.toString());};const handleSettingsClose=()=>{setShowSettings(false);};const handleEmailChange=newEmail=>{// Update user email (in a real app, this would call an API)\nif(user){const updatedUser={...user,email:newEmail};setUser(updatedUser);localStorage.setItem('user_info',JSON.stringify(updatedUser));}};const handlePasswordChange=(currentPassword,newPassword)=>{// Update password (in a real app, this would call an API)\nconsole.log('Password change requested');};// Translation helper function\nconst t=key=>getTranslation(currentLanguage.code,key);const handleLogout=()=>{localStorage.removeItem('access_token');localStorage.removeItem('user_info');delete axios.defaults.headers.common['Authorization'];setIsAuthenticated(false);setUser(null);setMessages([]);setInputText('');setSelectedImage(null);setShowPrescriptionForm(false);setChatSessions([]);setCurrentSessionId(null);};const createNewSession=async()=>{try{// Don't create a session immediately - let it be created when first message is sent\nsetCurrentSessionId(null);setMessages([]);}catch(error){console.error('Error creating new session:',error);}};const deleteSession=async sessionId=>{try{await axios.delete(`http://localhost:8000/chat/sessions/${sessionId}`);// If the deleted session was the current one, clear it\nif(sessionId===currentSessionId){setCurrentSessionId(null);setMessages([]);}// Refresh sessions list\nawait fetchChatSessions();// Close context menu\nsetContextMenu(null);}catch(error){console.error('Error deleting session:',error);}};const loadSession=async(sessionId,sessionName)=>{try{const response=await axios.get(`http://localhost:8000/chat/sessions/${sessionId}/messages`);const sessionMessages=response.data.map(msg=>({id:msg.id.toString(),text:msg.content,isUser:msg.is_user,timestamp:new Date(msg.created_at),isPrescription:msg.is_prescription}));setMessages(sessionMessages);setCurrentSessionId(sessionId);setMessages(sessionMessages);}catch(error){console.error('Error loading session:',error);}};const sendMessage=async()=>{if(!inputText.trim()&&!selectedImage)return;const userMessage={id:Date.now().toString(),text:inputText,isUser:true,timestamp:new Date(),image:selectedImage?URL.createObjectURL(selectedImage):undefined};setMessages(prev=>[...prev,userMessage]);setIsLoading(true);try{const formData=new FormData();formData.append('message',inputText);// Only send language if it's different from user's saved preference\n// The backend will use the user's saved preference as default\nformData.append('language',currentLanguage.code);if(selectedImage){formData.append('image',selectedImage);}if(currentSessionId){formData.append('session_id',currentSessionId.toString());}const response=await axios.post('http://localhost:8000/chat/',formData);const aiMessage={id:(Date.now()+1).toString(),text:response.data.response,isUser:false,timestamp:new Date(),isPrescription:response.data.is_prescription_query};setMessages(prev=>[...prev,aiMessage]);// Update session info if this is a new session\nif(response.data.session_id&&!currentSessionId){setCurrentSessionId(response.data.session_id);await fetchChatSessions();}}catch(error){console.error('Error sending message:',error);const errorMessage={id:(Date.now()+1).toString(),text:'Sorry, there was an error processing your request. Please try again.',isUser:false,timestamp:new Date()};setMessages(prev=>[...prev,errorMessage]);}finally{setIsLoading(false);setInputText('');setSelectedImage(null);}};const analyzePrescription=async()=>{if(!selectedImage)return;setIsPrescriptionLoading(true);try{const formData=new FormData();formData.append('image',selectedImage);// Only send language if it's different from user's saved preference\n// The backend will use the user's saved preference as default\nformData.append('language',currentLanguage.code);if(patientAge)formData.append('patient_age',patientAge);if(patientConditions)formData.append('patient_conditions',patientConditions);if(currentSessionId){formData.append('session_id',currentSessionId.toString());}const response=await axios.post('http://localhost:8000/prescription-analysis/',formData);const userMessage={id:Date.now().toString(),text:`Prescription Analysis Request${patientAge?` (Age: ${patientAge})`:''}${patientConditions?` (Conditions: ${patientConditions})`:''}`,isUser:true,timestamp:new Date(),image:URL.createObjectURL(selectedImage),isPrescription:true};const aiMessage={id:(Date.now()+1).toString(),text:response.data.response,isUser:false,timestamp:new Date(),isPrescription:true};setMessages(prev=>[...prev,userMessage,aiMessage]);setShowPrescriptionForm(false);setSelectedImage(null);setPatientAge('');setPatientConditions('');// Update session info if this is a new session\nif(response.data.session_id&&!currentSessionId){setCurrentSessionId(response.data.session_id);await fetchChatSessions();}}catch(error){console.error('Error analyzing prescription:',error);const errorMessage={id:(Date.now()+1).toString(),text:'Sorry, there was an error analyzing the prescription. Please try again or consult with a pharmacist.',isUser:false,timestamp:new Date(),isPrescription:true};setMessages(prev=>[...prev,errorMessage]);}finally{setIsPrescriptionLoading(false);}};const handleImageSelect=event=>{var _event$target$files;const file=(_event$target$files=event.target.files)===null||_event$target$files===void 0?void 0:_event$target$files[0];if(file){setSelectedImage(file);}};const removeSelectedImage=()=>{setSelectedImage(null);if(fileInputRef.current){fileInputRef.current.value='';}};const handleKeyPress=event=>{if(event.key==='Enter'&&!event.shiftKey){event.preventDefault();sendMessage();}};// Handle clicking outside context menu to close it\nuseEffect(()=>{const handleClickOutside=()=>{setContextMenu(null);};if(contextMenu){document.addEventListener('click',handleClickOutside);return()=>{document.removeEventListener('click',handleClickOutside);};}},[contextMenu]);return/*#__PURE__*/_jsxs(\"div\",{className:`App ${isDarkMode?'dark-mode':''}`,children:[!isAuthenticated?/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:showRegister?/*#__PURE__*/_jsx(Register,{onRegister:handleRegister,isLoading:isRegisterLoading,error:registerError,onSwitchToLogin:()=>setShowRegister(false),currentLanguage:currentLanguage,t:t,onLanguageChange:handleLoginPageLanguageChange}):/*#__PURE__*/_jsx(Login,{onLogin:handleLogin,isLoading:isLoginLoading,error:loginError,onSwitchToRegister:()=>setShowRegister(true),currentLanguage:currentLanguage,t:t,onLanguageChange:handleLoginPageLanguageChange})}):/*#__PURE__*/_jsxs(\"div\",{className:\"chatgpt-layout\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sidebar-header\",children:/*#__PURE__*/_jsxs(\"button\",{onClick:createNewSession,className:\"new-chat-btn\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"+\"}),\" \",t('newChat')]})}),/*#__PURE__*/_jsx(\"div\",{className:\"conversations-list\",children:chatSessions.map(session=>/*#__PURE__*/_jsxs(\"div\",{onClick:()=>loadSession(session.id,session.session_name),onContextMenu:e=>{e.preventDefault();setContextMenu({x:e.clientX,y:e.clientY,sessionId:session.id});},className:`conversation-item ${session.id===currentSessionId?'active':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"conversation-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"conversation-title\",children:session.session_name}),/*#__PURE__*/_jsxs(\"div\",{className:\"conversation-meta\",children:[session.message_count,\" \",t('messages')]})]}),session.id===currentSessionId&&/*#__PURE__*/_jsx(\"div\",{className:\"active-indicator\",children:\"\\u25CF\"})]},session.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar-footer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-avatar\",children:(user===null||user===void 0?void 0:(_user$full_name=user.full_name)===null||_user$full_name===void 0?void 0:_user$full_name.charAt(0))||'U'}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-name\",children:(user===null||user===void 0?void 0:user.full_name)||'User'}),/*#__PURE__*/_jsx(\"div\",{className:\"user-email\",children:user===null||user===void 0?void 0:user.email})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowLanguageSelector(true),className:\"sidebar-action-btn\",children:[\"\\uD83C\\uDF0D \",currentLanguage.nativeName]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowSettings(true),className:\"sidebar-action-btn\",children:[\"\\u2699\\uFE0F \",t('settings')]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,className:\"sidebar-action-btn logout\",children:t('logout')})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-chat\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header-content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:t('pediatricAIAssistant')}),/*#__PURE__*/_jsx(\"p\",{children:t('askMeAboutHealth')})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-header-actions\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowPrescriptionForm(!showPrescriptionForm),className:`header-action-btn ${showPrescriptionForm?'active':''}`,children:t('prescriptionAnalysis')})})]}),showPrescriptionForm&&/*#__PURE__*/_jsxs(\"div\",{className:\"prescription-form\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('prescriptionAnalysis')}),/*#__PURE__*/_jsxs(\"div\",{className:\"prescription-inputs\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:t('patientAge')}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:patientAge,onChange:e=>setPatientAge(e.target.value),placeholder:t('patientAgePlaceholder')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:t('medicalConditions')}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:patientConditions,onChange:e=>setPatientConditions(e.target.value),placeholder:t('medicalConditionsPlaceholder')})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"prescription-actions\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",ref:fileInputRef,onChange:handleImageSelect,accept:\"image/*\",style:{display:'none'}}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{var _fileInputRef$current;return(_fileInputRef$current=fileInputRef.current)===null||_fileInputRef$current===void 0?void 0:_fileInputRef$current.click();},className:\"upload-btn\",children:t('uploadPrescription')}),selectedImage&&/*#__PURE__*/_jsx(\"button\",{onClick:analyzePrescription,disabled:isPrescriptionLoading,className:\"analyze-btn\",children:isPrescriptionLoading?t('analyzing'):t('analyzePrescription')})]}),selectedImage&&/*#__PURE__*/_jsxs(\"div\",{className:\"selected-image\",children:[/*#__PURE__*/_jsx(\"img\",{src:URL.createObjectURL(selectedImage),alt:\"Selected\",className:\"preview-image\"}),/*#__PURE__*/_jsx(\"button\",{onClick:removeSelectedImage,className:\"remove-btn\",children:\"\\u2715\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"messages-container\",children:[messages.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-state-icon\",children:\"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F\"}),/*#__PURE__*/_jsx(\"h2\",{children:t('welcome')}),/*#__PURE__*/_jsx(\"p\",{children:t('emptyStateMessage')})]}):messages.map(message=>/*#__PURE__*/_jsxs(\"div\",{className:`message ${message.isUser?'user':'ai'}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-avatar\",children:message.isUser?'👤':'👨‍⚕️'}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-content\",children:[message.isUser?/*#__PURE__*/_jsx(\"div\",{className:\"user-message\",children:message.text}):/*#__PURE__*/_jsx(\"div\",{className:\"ai-message\",children:/*#__PURE__*/_jsx(ReactMarkdown,{components:{h1:_ref=>{let{node,children,...props}=_ref;return/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:'1.2em',margin:'8px 0'},...props,children:children});},h2:_ref2=>{let{node,children,...props}=_ref2;return/*#__PURE__*/_jsx(\"h2\",{style:{fontSize:'1.1em',margin:'8px 0'},...props,children:children});},h3:_ref3=>{let{node,children,...props}=_ref3;return/*#__PURE__*/_jsx(\"h3\",{style:{fontSize:'1em',margin:'6px 0'},...props,children:children});},p:_ref4=>{let{node,...props}=_ref4;return/*#__PURE__*/_jsx(\"p\",{style:{margin:'4px 0'},...props});},ul:_ref5=>{let{node,...props}=_ref5;return/*#__PURE__*/_jsx(\"ul\",{style:{margin:'8px 0',paddingLeft:'20px'},...props});},ol:_ref6=>{let{node,...props}=_ref6;return/*#__PURE__*/_jsx(\"ol\",{style:{margin:'8px 0',paddingLeft:'20px'},...props});},li:_ref7=>{let{node,...props}=_ref7;return/*#__PURE__*/_jsx(\"li\",{style:{margin:'2px 0'},...props});},strong:_ref8=>{let{node,...props}=_ref8;return/*#__PURE__*/_jsx(\"strong\",{style:{fontWeight:'bold'},...props});},em:_ref9=>{let{node,...props}=_ref9;return/*#__PURE__*/_jsx(\"em\",{style:{fontStyle:'italic'},...props});},blockquote:_ref0=>{let{node,...props}=_ref0;return/*#__PURE__*/_jsx(\"blockquote\",{style:{borderLeft:'3px solid #667eea',paddingLeft:'12px',margin:'8px 0',fontStyle:'italic'},...props});},code:_ref1=>{let{node,...props}=_ref1;return/*#__PURE__*/_jsx(\"code\",{style:{backgroundColor:'rgba(102, 126, 234, 0.1)',padding:'2px 4px',borderRadius:'3px',fontFamily:'monospace'},...props});}},children:message.text})}),message.image&&/*#__PURE__*/_jsx(\"img\",{src:message.image,alt:\"Uploaded\",className:\"message-image\"})]})]},message.id)),isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"message ai\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-avatar\",children:\"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F\"}),/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"ai-message\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"typing-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]})})})]}),isPrescriptionLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"message ai\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-avatar\",children:\"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F\"}),/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"ai-message\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"typing-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]})})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-wrapper\",children:[/*#__PURE__*/_jsx(\"textarea\",{value:inputText,onChange:e=>setInputText(e.target.value),onKeyPress:handleKeyPress,placeholder:t('chatPlaceholder'),className:\"text-input\",rows:1}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-actions\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",ref:fileInputRef,onChange:handleImageSelect,accept:\"image/*\",style:{display:'none'}}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{var _fileInputRef$current2;return(_fileInputRef$current2=fileInputRef.current)===null||_fileInputRef$current2===void 0?void 0:_fileInputRef$current2.click();},className:\"upload-btn\",type:\"button\",children:\"\\uD83D\\uDCF7\"}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,disabled:isLoading||!inputText.trim()&&!selectedImage,className:\"send-btn\",children:t('send')})]})]}),selectedImage&&!showPrescriptionForm&&/*#__PURE__*/_jsxs(\"div\",{className:\"selected-image\",children:[/*#__PURE__*/_jsx(\"img\",{src:URL.createObjectURL(selectedImage),alt:\"Selected\",className:\"preview-image\"}),/*#__PURE__*/_jsx(\"button\",{onClick:removeSelectedImage,className:\"remove-image-btn\",children:\"\\u2715\"})]})]})]})]}),contextMenu&&/*#__PURE__*/_jsx(\"div\",{className:\"context-menu\",style:{position:'fixed',top:contextMenu.y,left:contextMenu.x,zIndex:1000},onClick:e=>e.stopPropagation(),children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>contextMenu.sessionId&&deleteSession(contextMenu.sessionId),className:\"context-menu-item delete\",children:\"\\uD83D\\uDDD1\\uFE0F Delete Chat\"})}),/*#__PURE__*/_jsx(LanguageSelector,{onLanguageSelect:handleLanguageSelect,isVisible:showLanguageSelector}),/*#__PURE__*/_jsx(Settings,{isVisible:showSettings,onClose:handleSettingsClose,currentLanguage:currentLanguage,currentEmail:(user===null||user===void 0?void 0:user.email)||'',onEmailChange:handleEmailChange,onPasswordChange:handlePasswordChange,isDarkMode:isDarkMode,onDarkModeToggle:handleDarkModeToggle})]});}export default App;","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","ReactMarkdown","Login","Register","LanguageSelector","Settings","languages","getTranslation","jsx","_jsx","jsxs","_jsxs","App","_user$full_name","isAuthenticated","setIsAuthenticated","isLoginLoading","setIsLoginLoading","loginError","setLoginError","showRegister","setShowRegister","isRegisterLoading","setIsRegisterLoading","registerError","setRegisterError","currentLanguage","setCurrentLanguage","showLanguageSelector","setShowLanguageSelector","showSettings","setShowSettings","messages","setMessages","inputText","setInputText","isLoading","setIsLoading","selectedImage","setSelectedImage","showPrescriptionForm","setShowPrescriptionForm","patientAge","setPatientAge","patientConditions","setPatientConditions","isPrescriptionLoading","setIsPrescriptionLoading","chatSessions","setChatSessions","currentSessionId","setCurrentSessionId","user","setUser","contextMenu","setContextMenu","isDarkMode","setIsDarkMode","fileInputRef","token","localStorage","getItem","defaults","headers","common","fetchUserInfo","fetchChatSessions","interceptor","interceptors","response","use","error","_error$response","status","removeItem","Promise","reject","eject","savedDarkMode","userInfo","JSON","parse","get","language","data","userLanguage","find","lang","code","setItem","_error$response2","console","handleLogout","savedLanguage","_error$response3","handleLogin","email","password","formData","FormData","append","post","access_token","stringify","_error$response4","_error$response4$data","detail","handleRegister","fullName","_error$response5","_error$response5$data","handleLanguageSelect","put","handleLanguageChange","handleLoginPageLanguageChange","handleDarkModeToggle","newDarkMode","toString","handleSettingsClose","handleEmailChange","newEmail","updatedUser","handlePasswordChange","currentPassword","newPassword","log","t","key","createNewSession","deleteSession","sessionId","delete","loadSession","sessionName","sessionMessages","map","msg","id","text","content","isUser","is_user","timestamp","Date","created_at","isPrescription","is_prescription","sendMessage","trim","userMessage","now","image","URL","createObjectURL","undefined","prev","aiMessage","is_prescription_query","session_id","errorMessage","analyzePrescription","handleImageSelect","event","_event$target$files","file","target","files","removeSelectedImage","current","value","handleKeyPress","shiftKey","preventDefault","handleClickOutside","document","addEventListener","removeEventListener","className","children","onRegister","onSwitchToLogin","onLanguageChange","onLogin","onSwitchToRegister","onClick","session","session_name","onContextMenu","e","x","clientX","y","clientY","message_count","full_name","charAt","nativeName","type","onChange","placeholder","ref","accept","style","display","_fileInputRef$current","click","disabled","src","alt","length","message","components","h1","_ref","node","props","fontSize","margin","h2","_ref2","h3","_ref3","p","_ref4","ul","_ref5","paddingLeft","ol","_ref6","li","_ref7","strong","_ref8","fontWeight","em","_ref9","fontStyle","blockquote","_ref0","borderLeft","_ref1","backgroundColor","padding","borderRadius","fontFamily","onKeyPress","rows","_fileInputRef$current2","position","top","left","zIndex","stopPropagation","onLanguageSelect","isVisible","onClose","currentEmail","onEmailChange","onPasswordChange","onDarkModeToggle"],"sources":["/Users/devanshupadhyay/PDs/IBM/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport Login from './Login';\nimport Register from './Register';\nimport LanguageSelector from './LanguageSelector';\nimport Settings from './Settings';\nimport { languages, Language, getTranslation } from './languages';\nimport './App.css';\n\ninterface Message {\n  id: string;\n  text: string;\n  isUser: boolean;\n  timestamp: Date;\n  image?: string;\n  isPrescription?: boolean;\n}\n\ninterface ChatSession {\n  id: number;\n  session_name: string;\n  created_at: string;\n  updated_at: string;\n  message_count: number;\n}\n\ninterface User {\n  id: number;\n  email: string;\n  full_name: string;\n}\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoginLoading, setIsLoginLoading] = useState(false);\n  const [loginError, setLoginError] = useState('');\n  const [showRegister, setShowRegister] = useState(false);\n  const [isRegisterLoading, setIsRegisterLoading] = useState(false);\n  const [registerError, setRegisterError] = useState('');\n  const [currentLanguage, setCurrentLanguage] = useState<Language>(languages[0]); // Default to English\n  const [showLanguageSelector, setShowLanguageSelector] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [inputText, setInputText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedImage, setSelectedImage] = useState<File | null>(null);\n  const [showPrescriptionForm, setShowPrescriptionForm] = useState(false);\n  const [patientAge, setPatientAge] = useState('');\n  const [patientConditions, setPatientConditions] = useState('');\n  const [isPrescriptionLoading, setIsPrescriptionLoading] = useState(false);\n  const [chatSessions, setChatSessions] = useState<ChatSession[]>([]);\n  const [currentSessionId, setCurrentSessionId] = useState<number | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [contextMenu, setContextMenu] = useState<{ x: number; y: number; sessionId: number | null } | null>(null);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Configure axios defaults and interceptors\n  useEffect(() => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setIsAuthenticated(true);\n      fetchUserInfo();\n      fetchChatSessions();\n    }\n    \n    // Add response interceptor to handle 401 errors\n    const interceptor = axios.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          // Clear token and redirect to login\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('user_info');\n          delete axios.defaults.headers.common['Authorization'];\n          setIsAuthenticated(false);\n          setUser(null);\n          setMessages([]);\n          setChatSessions([]);\n          setCurrentSessionId(null);\n        }\n        return Promise.reject(error);\n      }\n    );\n    \n    // Cleanup interceptor on unmount\n    return () => {\n      axios.interceptors.response.eject(interceptor);\n    };\n  }, []);\n\n  // Initialize language - always default to English for login page\n  useEffect(() => {\n    if (isAuthenticated) {\n      // For authenticated users, we'll load their preference in fetchUserInfo\n      // This prevents race conditions between localStorage and backend data\n    } else {\n      // For login page, always default to English\n      setCurrentLanguage(languages[0]); // English is the first language\n    }\n  }, [isAuthenticated]);\n\n  // Initialize dark mode\n  useEffect(() => {\n    const savedDarkMode = localStorage.getItem('dark_mode');\n    if (savedDarkMode) {\n      setIsDarkMode(savedDarkMode === 'true');\n    }\n  }, []);\n\n  const fetchUserInfo = async () => {\n    try {\n      // For now, we'll get user info from the login response\n      // In a real app, you'd have a /me endpoint\n      const userInfo = localStorage.getItem('user_info');\n      if (userInfo) {\n        setUser(JSON.parse(userInfo));\n      }\n      \n      // Fetch user's language preference from backend\n      try {\n        const response = await axios.get('http://localhost:8000/user/language');\n        const { language } = response.data;\n        \n        // Update current language based on user preference\n        const userLanguage = languages.find(lang => lang.code === language);\n        if (userLanguage) {\n          setCurrentLanguage(userLanguage);\n          localStorage.setItem('user_language', language);\n        } else {\n          // If no language preference is set, show language selector\n          setShowLanguageSelector(true);\n        }\n      } catch (error: any) {\n        console.error('Error fetching user language preference:', error);\n        \n        // If it's an authentication error, clear the token and redirect to login\n        if (error.response?.status === 401) {\n          handleLogout();\n          return;\n        }\n        \n        // Fall back to stored language preference\n        const savedLanguage = localStorage.getItem('user_language');\n        if (savedLanguage) {\n          const language = languages.find(lang => lang.code === savedLanguage);\n          if (language) {\n            setCurrentLanguage(language);\n          } else {\n            // If no valid language preference found, show language selector\n            setShowLanguageSelector(true);\n          }\n        } else {\n          // If no language preference at all, show language selector\n          setShowLanguageSelector(true);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching user info:', error);\n    }\n  };\n\n  const fetchChatSessions = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/chat/sessions');\n      setChatSessions(response.data);\n    } catch (error: any) {\n      console.error('Error fetching chat sessions:', error);\n      \n      // If it's an authentication error, clear the token and redirect to login\n      if (error.response?.status === 401) {\n        handleLogout();\n        return;\n      }\n    }\n  };\n\n  const handleLogin = async (email: string, password: string) => {\n    setIsLoginLoading(true);\n    setLoginError('');\n    \n    try {\n      const formData = new FormData();\n      formData.append('email', email);\n      formData.append('password', password);\n\n      const response = await axios.post('http://localhost:8000/auth/login', formData);\n      \n      const { access_token, user: userInfo } = response.data;\n      \n      // Store token and user info\n      localStorage.setItem('access_token', access_token);\n      localStorage.setItem('user_info', JSON.stringify(userInfo));\n      \n      // Set axios default header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      \n      setIsAuthenticated(true);\n      setUser(userInfo);\n      setLoginError('');\n      \n      // Fetch user's language preference and chat sessions\n      await fetchUserInfo();\n      await fetchChatSessions();\n      \n    } catch (error: any) {\n      console.error('Login error:', error);\n      setLoginError(error.response?.data?.detail || 'Login failed. Please try again.');\n    }\n    \n    setIsLoginLoading(false);\n  };\n\n  const handleRegister = async (email: string, password: string, fullName: string) => {\n    setIsRegisterLoading(true);\n    setRegisterError('');\n    \n    try {\n      const formData = new FormData();\n      formData.append('email', email);\n      formData.append('password', password);\n      formData.append('full_name', fullName);\n\n      const response = await axios.post('http://localhost:8000/auth/register', formData);\n      \n      const { access_token, user: userInfo } = response.data;\n      \n      // Store token and user info\n      localStorage.setItem('access_token', access_token);\n      localStorage.setItem('user_info', JSON.stringify(userInfo));\n      \n      // Set axios default header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      \n      setIsAuthenticated(true);\n      setUser(userInfo);\n      setRegisterError('');\n      setShowRegister(false);\n      \n      // Fetch user's language preference and chat sessions\n      await fetchUserInfo();\n      await fetchChatSessions();\n      \n      // Check if this is a first-time user (after fetching language preference)\n      const savedLanguage = localStorage.getItem('user_language');\n      if (!savedLanguage) {\n        setShowLanguageSelector(true);\n      }\n      \n    } catch (error: any) {\n      console.error('Registration error:', error);\n      setRegisterError(error.response?.data?.detail || 'Registration failed. Please try again.');\n    }\n    \n    setIsRegisterLoading(false);\n  };\n\n  const handleLanguageSelect = async (language: Language) => {\n    setCurrentLanguage(language);\n    localStorage.setItem('user_language', language.code);\n    \n    // Save language preference to backend if user is authenticated\n    if (isAuthenticated && user) {\n      try {\n        const formData = new FormData();\n        formData.append('language', language.code);\n        await axios.put('http://localhost:8000/user/language', formData);\n        \n        // Refresh user info to ensure language preference is updated\n        await fetchUserInfo();\n      } catch (error) {\n        console.error('Error saving language preference:', error);\n      }\n    }\n    \n    setShowLanguageSelector(false);\n  };\n\n  const handleLanguageChange = async (language: Language) => {\n    setCurrentLanguage(language);\n    localStorage.setItem('user_language', language.code);\n    \n    // Save language preference to backend if user is authenticated\n    if (isAuthenticated && user) {\n      try {\n        const formData = new FormData();\n        formData.append('language', language.code);\n        await axios.put('http://localhost:8000/user/language', formData);\n        \n        // Refresh user info to ensure language preference is updated\n        await fetchUserInfo();\n      } catch (error) {\n        console.error('Error saving language preference:', error);\n      }\n    }\n  };\n\n  const handleLoginPageLanguageChange = (language: Language) => {\n    // For login page, only update the current language without saving to backend\n    setCurrentLanguage(language);\n    // Don't save to localStorage or backend for login page changes\n  };\n\n  const handleDarkModeToggle = () => {\n    const newDarkMode = !isDarkMode;\n    setIsDarkMode(newDarkMode);\n    localStorage.setItem('dark_mode', newDarkMode.toString());\n  };\n\n  const handleSettingsClose = () => {\n    setShowSettings(false);\n  };\n\n  const handleEmailChange = (newEmail: string) => {\n    // Update user email (in a real app, this would call an API)\n    if (user) {\n      const updatedUser = { ...user, email: newEmail };\n      setUser(updatedUser);\n      localStorage.setItem('user_info', JSON.stringify(updatedUser));\n    }\n  };\n\n  const handlePasswordChange = (currentPassword: string, newPassword: string) => {\n    // Update password (in a real app, this would call an API)\n    console.log('Password change requested');\n  };\n\n  // Translation helper function\n  const t = (key: string) => getTranslation(currentLanguage.code, key);\n\n  const handleLogout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user_info');\n    delete axios.defaults.headers.common['Authorization'];\n    \n    setIsAuthenticated(false);\n    setUser(null);\n    setMessages([]);\n    setInputText('');\n    setSelectedImage(null);\n    setShowPrescriptionForm(false);\n    setChatSessions([]);\n    setCurrentSessionId(null);\n  };\n\n  const createNewSession = async () => {\n    try {\n      // Don't create a session immediately - let it be created when first message is sent\n      setCurrentSessionId(null);\n      setMessages([]);\n      \n    } catch (error) {\n      console.error('Error creating new session:', error);\n    }\n  };\n\n  const deleteSession = async (sessionId: number) => {\n    try {\n      await axios.delete(`http://localhost:8000/chat/sessions/${sessionId}`);\n      \n      // If the deleted session was the current one, clear it\n      if (sessionId === currentSessionId) {\n        setCurrentSessionId(null);\n        setMessages([]);\n      }\n      \n      // Refresh sessions list\n      await fetchChatSessions();\n      \n      // Close context menu\n      setContextMenu(null);\n      \n    } catch (error) {\n      console.error('Error deleting session:', error);\n    }\n  };\n\n  const loadSession = async (sessionId: number, sessionName: string) => {\n    try {\n      const response = await axios.get(`http://localhost:8000/chat/sessions/${sessionId}/messages`);\n      const sessionMessages = response.data.map((msg: any) => ({\n        id: msg.id.toString(),\n        text: msg.content,\n        isUser: msg.is_user,\n        timestamp: new Date(msg.created_at),\n        isPrescription: msg.is_prescription\n      }));\n      \n      setMessages(sessionMessages);\n      setCurrentSessionId(sessionId);\n      setMessages(sessionMessages);\n      \n    } catch (error) {\n      console.error('Error loading session:', error);\n    }\n  };\n\n  const sendMessage = async () => {\n    if (!inputText.trim() && !selectedImage) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      text: inputText,\n      isUser: true,\n      timestamp: new Date(),\n      image: selectedImage ? URL.createObjectURL(selectedImage) : undefined\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setIsLoading(true);\n\n    try {\n      const formData = new FormData();\n      formData.append('message', inputText);\n      // Only send language if it's different from user's saved preference\n      // The backend will use the user's saved preference as default\n      formData.append('language', currentLanguage.code);\n      if (selectedImage) {\n        formData.append('image', selectedImage);\n      }\n      if (currentSessionId) {\n        formData.append('session_id', currentSessionId.toString());\n      }\n\n      const response = await axios.post('http://localhost:8000/chat/', formData);\n\n      const aiMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        text: response.data.response,\n        isUser: false,\n        timestamp: new Date(),\n        isPrescription: response.data.is_prescription_query\n      };\n\n      setMessages(prev => [...prev, aiMessage]);\n      \n      // Update session info if this is a new session\n      if (response.data.session_id && !currentSessionId) {\n        setCurrentSessionId(response.data.session_id);\n        await fetchChatSessions();\n      }\n      \n    } catch (error) {\n      console.error('Error sending message:', error);\n      const errorMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        text: 'Sorry, there was an error processing your request. Please try again.',\n        isUser: false,\n        timestamp: new Date(),\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n      setInputText('');\n      setSelectedImage(null);\n    }\n  };\n\n  const analyzePrescription = async () => {\n    if (!selectedImage) return;\n\n    setIsPrescriptionLoading(true);\n\n    try {\n      const formData = new FormData();\n      formData.append('image', selectedImage);\n      // Only send language if it's different from user's saved preference\n      // The backend will use the user's saved preference as default\n      formData.append('language', currentLanguage.code);\n      if (patientAge) formData.append('patient_age', patientAge);\n      if (patientConditions) formData.append('patient_conditions', patientConditions);\n      if (currentSessionId) {\n        formData.append('session_id', currentSessionId.toString());\n      }\n\n      const response = await axios.post('http://localhost:8000/prescription-analysis/', formData);\n\n      const userMessage: Message = {\n        id: Date.now().toString(),\n        text: `Prescription Analysis Request${patientAge ? ` (Age: ${patientAge})` : ''}${patientConditions ? ` (Conditions: ${patientConditions})` : ''}`,\n        isUser: true,\n        timestamp: new Date(),\n        image: URL.createObjectURL(selectedImage),\n        isPrescription: true\n      };\n\n      const aiMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        text: response.data.response,\n        isUser: false,\n        timestamp: new Date(),\n        isPrescription: true\n      };\n\n      setMessages(prev => [...prev, userMessage, aiMessage]);\n      setShowPrescriptionForm(false);\n      setSelectedImage(null);\n      setPatientAge('');\n      setPatientConditions('');\n      \n      // Update session info if this is a new session\n      if (response.data.session_id && !currentSessionId) {\n        setCurrentSessionId(response.data.session_id);\n        await fetchChatSessions();\n      }\n      \n    } catch (error) {\n      console.error('Error analyzing prescription:', error);\n      const errorMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        text: 'Sorry, there was an error analyzing the prescription. Please try again or consult with a pharmacist.',\n        isUser: false,\n        timestamp: new Date(),\n        isPrescription: true\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsPrescriptionLoading(false);\n    }\n  };\n\n  const handleImageSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      setSelectedImage(file);\n    }\n  };\n\n  const removeSelectedImage = () => {\n    setSelectedImage(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      sendMessage();\n    }\n  };\n\n  // Handle clicking outside context menu to close it\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setContextMenu(null);\n    };\n\n    if (contextMenu) {\n      document.addEventListener('click', handleClickOutside);\n      return () => {\n        document.removeEventListener('click', handleClickOutside);\n      };\n    }\n  }, [contextMenu]);\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark-mode' : ''}`}>\n      {!isAuthenticated ? (\n        <div className=\"login-container\">\n          {showRegister ? (\n            <Register \n              onRegister={handleRegister}\n              isLoading={isRegisterLoading}\n              error={registerError}\n              onSwitchToLogin={() => setShowRegister(false)}\n              currentLanguage={currentLanguage}\n              t={t}\n              onLanguageChange={handleLoginPageLanguageChange}\n            />\n          ) : (\n            <Login \n              onLogin={handleLogin}\n              isLoading={isLoginLoading}\n              error={loginError}\n              onSwitchToRegister={() => setShowRegister(true)}\n              currentLanguage={currentLanguage}\n              t={t}\n              onLanguageChange={handleLoginPageLanguageChange}\n            />\n          )}\n        </div>\n      ) : (\n        <div className=\"chatgpt-layout\">\n          {/* Sidebar */}\n          <div className=\"sidebar\">\n            <div className=\"sidebar-header\">\n              <button \n                onClick={createNewSession}\n                className=\"new-chat-btn\"\n              >\n                <span>+</span> {t('newChat')}\n              </button>\n            </div>\n            \n            <div className=\"conversations-list\">\n              {chatSessions.map((session) => (\n                <div \n                  key={session.id}\n                  onClick={() => loadSession(session.id, session.session_name)}\n                  onContextMenu={(e) => {\n                    e.preventDefault();\n                    setContextMenu({\n                      x: e.clientX,\n                      y: e.clientY,\n                      sessionId: session.id\n                    });\n                  }}\n                  className={`conversation-item ${session.id === currentSessionId ? 'active' : ''}`}\n                >\n                  <div className=\"conversation-content\">\n                    <div className=\"conversation-title\">\n                      {session.session_name}\n                    </div>\n                    <div className=\"conversation-meta\">\n                      {session.message_count} {t('messages')}\n                    </div>\n                  </div>\n                  {session.id === currentSessionId && (\n                    <div className=\"active-indicator\">●</div>\n                  )}\n                </div>\n              ))}\n            </div>\n            \n            <div className=\"sidebar-footer\">\n              <div className=\"user-info\">\n                <div className=\"user-avatar\">\n                  {user?.full_name?.charAt(0) || 'U'}\n                </div>\n                <div className=\"user-details\">\n                  <div className=\"user-name\">{user?.full_name || 'User'}</div>\n                  <div className=\"user-email\">{user?.email}</div>\n                </div>\n              </div>\n              \n              <div className=\"sidebar-actions\">\n                <button \n                  onClick={() => setShowLanguageSelector(true)}\n                  className=\"sidebar-action-btn\"\n                >\n                  🌍 {currentLanguage.nativeName}\n                </button>\n                <button \n                  onClick={() => setShowSettings(true)}\n                  className=\"sidebar-action-btn\"\n                >\n                  ⚙️ {t('settings')}\n                </button>\n                <button \n                  onClick={handleLogout}\n                  className=\"sidebar-action-btn logout\"\n                >\n                  {t('logout')}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Main Chat Area */}\n          <div className=\"main-chat\">\n            {/* Chat Header */}\n            <div className=\"chat-header\">\n              <div className=\"chat-header-content\">\n                <h1>{t('pediatricAIAssistant')}</h1>\n                <p>{t('askMeAboutHealth')}</p>\n              </div>\n              \n              <div className=\"chat-header-actions\">\n                <button \n                  onClick={() => setShowPrescriptionForm(!showPrescriptionForm)}\n                  className={`header-action-btn ${showPrescriptionForm ? 'active' : ''}`}\n                >\n                  {t('prescriptionAnalysis')}\n                </button>\n              </div>\n            </div>\n\n            {/* Prescription Form */}\n            {showPrescriptionForm && (\n              <div className=\"prescription-form\">\n                <h3>{t('prescriptionAnalysis')}</h3>\n                <div className=\"prescription-inputs\">\n                  <div className=\"input-group\">\n                    <label>{t('patientAge')}</label>\n                    <input\n                      type=\"text\"\n                      value={patientAge}\n                      onChange={(e) => setPatientAge(e.target.value)}\n                      placeholder={t('patientAgePlaceholder')}\n                    />\n                  </div>\n                  <div className=\"input-group\">\n                    <label>{t('medicalConditions')}</label>\n                    <input\n                      type=\"text\"\n                      value={patientConditions}\n                      onChange={(e) => setPatientConditions(e.target.value)}\n                      placeholder={t('medicalConditionsPlaceholder')}\n                    />\n                  </div>\n                </div>\n                <div className=\"prescription-actions\">\n                  <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    onChange={handleImageSelect}\n                    accept=\"image/*\"\n                    style={{ display: 'none' }}\n                  />\n                  <button \n                    onClick={() => fileInputRef.current?.click()}\n                    className=\"upload-btn\"\n                  >\n                    {t('uploadPrescription')}\n                  </button>\n                  {selectedImage && (\n                    <button \n                      onClick={analyzePrescription}\n                      disabled={isPrescriptionLoading}\n                      className=\"analyze-btn\"\n                    >\n                      {isPrescriptionLoading ? t('analyzing') : t('analyzePrescription')}\n                    </button>\n                  )}\n                </div>\n                {selectedImage && (\n                  <div className=\"selected-image\">\n                    <img \n                      src={URL.createObjectURL(selectedImage)} \n                      alt=\"Selected\" \n                      className=\"preview-image\"\n                    />\n                    <button \n                      onClick={removeSelectedImage}\n                      className=\"remove-btn\"\n                    >\n                      ✕\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Messages */}\n            <div className=\"messages-container\">\n              {messages.length === 0 ? (\n                <div className=\"empty-state\">\n                  <div className=\"empty-state-icon\">👨‍⚕️</div>\n                  <h2>{t('welcome')}</h2>\n                  <p>{t('emptyStateMessage')}</p>\n                </div>\n              ) : (\n                messages.map((message) => (\n                  <div key={message.id} className={`message ${message.isUser ? 'user' : 'ai'}`}>\n                    <div className=\"message-avatar\">\n                      {message.isUser ? '👤' : '👨‍⚕️'}\n                    </div>\n                    <div className=\"message-content\">\n                      {message.isUser ? (\n                        <div className=\"user-message\">\n                          {message.text}\n                        </div>\n                      ) : (\n                        <div className=\"ai-message\">\n                          <ReactMarkdown \n                            components={{\n                              h1: ({node, children, ...props}) => <h1 style={{fontSize: '1.2em', margin: '8px 0'}} {...props}>{children}</h1>,\n                              h2: ({node, children, ...props}) => <h2 style={{fontSize: '1.1em', margin: '8px 0'}} {...props}>{children}</h2>,\n                              h3: ({node, children, ...props}) => <h3 style={{fontSize: '1em', margin: '6px 0'}} {...props}>{children}</h3>,\n                              p: ({node, ...props}) => <p style={{margin: '4px 0'}} {...props} />,\n                              ul: ({node, ...props}) => <ul style={{margin: '8px 0', paddingLeft: '20px'}} {...props} />,\n                              ol: ({node, ...props}) => <ol style={{margin: '8px 0', paddingLeft: '20px'}} {...props} />,\n                              li: ({node, ...props}) => <li style={{margin: '2px 0'}} {...props} />,\n                              strong: ({node, ...props}) => <strong style={{fontWeight: 'bold'}} {...props} />,\n                              em: ({node, ...props}) => <em style={{fontStyle: 'italic'}} {...props} />,\n                              blockquote: ({node, ...props}) => (\n                                <blockquote style={{\n                                  borderLeft: '3px solid #667eea',\n                                  paddingLeft: '12px',\n                                  margin: '8px 0',\n                                  fontStyle: 'italic'\n                                }} {...props} />\n                              ),\n                              code: ({node, ...props}) => (\n                                <code style={{\n                                  backgroundColor: 'rgba(102, 126, 234, 0.1)',\n                                  padding: '2px 4px',\n                                  borderRadius: '3px',\n                                  fontFamily: 'monospace'\n                                }} {...props} />\n                              )\n                            }}\n                          >\n                            {message.text}\n                          </ReactMarkdown>\n                        </div>\n                      )}\n                      {message.image && (\n                        <img \n                          src={message.image} \n                          alt=\"Uploaded\" \n                          className=\"message-image\"\n                        />\n                      )}\n                    </div>\n                  </div>\n                ))\n              )}\n              {isLoading && (\n                <div className=\"message ai\">\n                  <div className=\"message-avatar\">👨‍⚕️</div>\n                  <div className=\"message-content\">\n                    <div className=\"ai-message\">\n                      <div className=\"typing-indicator\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              {isPrescriptionLoading && (\n                <div className=\"message ai\">\n                  <div className=\"message-avatar\">👨‍⚕️</div>\n                  <div className=\"message-content\">\n                    <div className=\"ai-message\">\n                      <div className=\"typing-indicator\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Input Area */}\n            <div className=\"input-container\">\n              <div className=\"input-wrapper\">\n                <textarea\n                  value={inputText}\n                  onChange={(e) => setInputText(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  placeholder={t('chatPlaceholder')}\n                  className=\"text-input\"\n                  rows={1}\n                />\n                <div className=\"input-actions\">\n                  <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    onChange={handleImageSelect}\n                    accept=\"image/*\"\n                    style={{ display: 'none' }}\n                  />\n                  <button \n                    onClick={() => fileInputRef.current?.click()}\n                    className=\"upload-btn\"\n                    type=\"button\"\n                  >\n                    📷\n                  </button>\n                  <button \n                    onClick={sendMessage}\n                    disabled={isLoading || (!inputText.trim() && !selectedImage)}\n                    className=\"send-btn\"\n                  >\n                    {t('send')}\n                  </button>\n                </div>\n              </div>\n              \n              {selectedImage && !showPrescriptionForm && (\n                <div className=\"selected-image\">\n                  <img \n                    src={URL.createObjectURL(selectedImage)} \n                    alt=\"Selected\" \n                    className=\"preview-image\"\n                  />\n                  <button onClick={removeSelectedImage} className=\"remove-image-btn\">\n                    ✕\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Context Menu */}\n      {contextMenu && (\n        <div \n          className=\"context-menu\"\n          style={{\n            position: 'fixed',\n            top: contextMenu.y,\n            left: contextMenu.x,\n            zIndex: 1000\n          }}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <button \n            onClick={() => contextMenu.sessionId && deleteSession(contextMenu.sessionId)}\n            className=\"context-menu-item delete\"\n          >\n            🗑️ Delete Chat\n          </button>\n        </div>\n      )}\n      \n      {/* Language Selector Modal */}\n      <LanguageSelector\n        onLanguageSelect={handleLanguageSelect}\n        isVisible={showLanguageSelector}\n      />\n      \n      {/* Settings Modal */}\n              <Settings\n          isVisible={showSettings}\n          onClose={handleSettingsClose}\n          currentLanguage={currentLanguage}\n          currentEmail={user?.email || ''}\n          onEmailChange={handleEmailChange}\n          onPasswordChange={handlePasswordChange}\n          isDarkMode={isDarkMode}\n          onDarkModeToggle={handleDarkModeToggle}\n        />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}