{"ast":null,"code":"var _jsxFileName = \"/Users/devanshupadhyay/PDs/IBM/frontend/src/LanguageSelectorPopup.tsx\";\nimport React from 'react';\nimport { languages } from './languages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageSelectorPopup = ({\n  isOpen,\n  onClose,\n  onLanguageSelect,\n  currentLanguage\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-popup-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-popup\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-popup-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-popup-content\",\n        children: languages.map(language => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `language-option ${language.code === currentLanguage.code ? 'selected' : ''}`,\n          onClick: () => {\n            onLanguageSelect(language);\n            onClose();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"language-native-name\",\n            children: language.nativeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"language-english-name\",\n            children: [\"(\", language.name, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, language.code, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = LanguageSelectorPopup;\nexport default LanguageSelectorPopup;\nvar _c;\n$RefreshReg$(_c, \"LanguageSelectorPopup\");","map":{"version":3,"names":["React","languages","jsxDEV","_jsxDEV","LanguageSelectorPopup","isOpen","onClose","onLanguageSelect","currentLanguage","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","map","language","code","nativeName","name","_c","$RefreshReg$"],"sources":["/Users/devanshupadhyay/PDs/IBM/frontend/src/LanguageSelectorPopup.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { languages, Language } from './languages';\n\ninterface LanguageSelectorPopupProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onLanguageSelect: (language: Language) => void;\n  currentLanguage: Language;\n}\n\nconst LanguageSelectorPopup: React.FC<LanguageSelectorPopupProps> = ({\n  isOpen,\n  onClose,\n  onLanguageSelect,\n  currentLanguage\n}) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"language-popup-overlay\" onClick={onClose}>\n      <div className=\"language-popup\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"language-popup-header\">\n          <h3>Select Language</h3>\n          <button className=\"close-btn\" onClick={onClose}>Ã—</button>\n        </div>\n        <div className=\"language-popup-content\">\n          {languages.map((language) => (\n            <button\n              key={language.code}\n              className={`language-option ${language.code === currentLanguage.code ? 'selected' : ''}`}\n              onClick={() => {\n                onLanguageSelect(language);\n                onClose();\n              }}\n            >\n              <span className=\"language-native-name\">{language.nativeName}</span>\n              <span className=\"language-english-name\">({language.name})</span>\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LanguageSelectorPopup; "],"mappings":";AAAA,OAAOA,KAAK,MAAqB,OAAO;AACxC,SAASC,SAAS,QAAkB,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASlD,MAAMC,qBAA2D,GAAGA,CAAC;EACnEC,MAAM;EACNC,OAAO;EACPC,gBAAgB;EAChBC;AACF,CAAC,KAAK;EACJ,IAAI,CAACH,MAAM,EAAE,OAAO,IAAI;EAExB,oBACEF,OAAA;IAAKM,SAAS,EAAC,wBAAwB;IAACC,OAAO,EAAEJ,OAAQ;IAAAK,QAAA,eACvDR,OAAA;MAAKM,SAAS,EAAC,gBAAgB;MAACC,OAAO,EAAGE,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;MAAAF,QAAA,gBAClER,OAAA;QAAKM,SAAS,EAAC,uBAAuB;QAAAE,QAAA,gBACpCR,OAAA;UAAAQ,QAAA,EAAI;QAAe;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBd,OAAA;UAAQM,SAAS,EAAC,WAAW;UAACC,OAAO,EAAEJ,OAAQ;UAAAK,QAAA,EAAC;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eACNd,OAAA;QAAKM,SAAS,EAAC,wBAAwB;QAAAE,QAAA,EACpCV,SAAS,CAACiB,GAAG,CAAEC,QAAQ,iBACtBhB,OAAA;UAEEM,SAAS,EAAE,mBAAmBU,QAAQ,CAACC,IAAI,KAAKZ,eAAe,CAACY,IAAI,GAAG,UAAU,GAAG,EAAE,EAAG;UACzFV,OAAO,EAAEA,CAAA,KAAM;YACbH,gBAAgB,CAACY,QAAQ,CAAC;YAC1Bb,OAAO,CAAC,CAAC;UACX,CAAE;UAAAK,QAAA,gBAEFR,OAAA;YAAMM,SAAS,EAAC,sBAAsB;YAAAE,QAAA,EAAEQ,QAAQ,CAACE;UAAU;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACnEd,OAAA;YAAMM,SAAS,EAAC,uBAAuB;YAAAE,QAAA,GAAC,GAAC,EAACQ,QAAQ,CAACG,IAAI,EAAC,GAAC;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAR3DE,QAAQ,CAACC,IAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASZ,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACM,EAAA,GAjCInB,qBAA2D;AAmCjE,eAAeA,qBAAqB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}