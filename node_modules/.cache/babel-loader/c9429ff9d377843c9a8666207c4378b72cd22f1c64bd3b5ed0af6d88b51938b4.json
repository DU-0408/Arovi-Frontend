{"ast":null,"code":"export const detectSystemDarkMode = () => {\n  if (typeof window === 'undefined') return false;\n  return window.matchMedia('(prefers-color-scheme: dark)').matches;\n};\nexport const getEffectiveDarkMode = preference => {\n  if (preference === 'system') {\n    return detectSystemDarkMode();\n  }\n  return preference === 'dark';\n};\nexport const subscribeToSystemDarkMode = callback => {\n  if (typeof window === 'undefined') return () => {};\n  const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n  const handleChange = e => {\n    callback(e.matches);\n  };\n  mediaQuery.addEventListener('change', handleChange);\n\n  // Return cleanup function\n  return () => {\n    mediaQuery.removeEventListener('change', handleChange);\n  };\n};","map":{"version":3,"names":["detectSystemDarkMode","window","matchMedia","matches","getEffectiveDarkMode","preference","subscribeToSystemDarkMode","callback","mediaQuery","handleChange","e","addEventListener","removeEventListener"],"sources":["/Users/devanshupadhyay/PDs/IBM/frontend/src/utils/darkMode.ts"],"sourcesContent":["export type DarkModePreference = 'system' | 'light' | 'dark';\n\nexport const detectSystemDarkMode = (): boolean => {\n  if (typeof window === 'undefined') return false;\n  return window.matchMedia('(prefers-color-scheme: dark)').matches;\n};\n\nexport const getEffectiveDarkMode = (preference: DarkModePreference): boolean => {\n  if (preference === 'system') {\n    return detectSystemDarkMode();\n  }\n  return preference === 'dark';\n};\n\nexport const subscribeToSystemDarkMode = (callback: (isDark: boolean) => void): (() => void) => {\n  if (typeof window === 'undefined') return () => {};\n  \n  const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n  \n  const handleChange = (e: MediaQueryListEvent) => {\n    callback(e.matches);\n  };\n  \n  mediaQuery.addEventListener('change', handleChange);\n  \n  // Return cleanup function\n  return () => {\n    mediaQuery.removeEventListener('change', handleChange);\n  };\n}; "],"mappings":"AAEA,OAAO,MAAMA,oBAAoB,GAAGA,CAAA,KAAe;EACjD,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE,OAAO,KAAK;EAC/C,OAAOA,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;AAClE,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAIC,UAA8B,IAAc;EAC/E,IAAIA,UAAU,KAAK,QAAQ,EAAE;IAC3B,OAAOL,oBAAoB,CAAC,CAAC;EAC/B;EACA,OAAOK,UAAU,KAAK,MAAM;AAC9B,CAAC;AAED,OAAO,MAAMC,yBAAyB,GAAIC,QAAmC,IAAmB;EAC9F,IAAI,OAAON,MAAM,KAAK,WAAW,EAAE,OAAO,MAAM,CAAC,CAAC;EAElD,MAAMO,UAAU,GAAGP,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC;EAEpE,MAAMO,YAAY,GAAIC,CAAsB,IAAK;IAC/CH,QAAQ,CAACG,CAAC,CAACP,OAAO,CAAC;EACrB,CAAC;EAEDK,UAAU,CAACG,gBAAgB,CAAC,QAAQ,EAAEF,YAAY,CAAC;;EAEnD;EACA,OAAO,MAAM;IACXD,UAAU,CAACI,mBAAmB,CAAC,QAAQ,EAAEH,YAAY,CAAC;EACxD,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}